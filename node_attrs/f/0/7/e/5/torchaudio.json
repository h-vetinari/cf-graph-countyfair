{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "azure": {
   "free_disk_space": true,
   "settings_linux": {
    "swapfile_size": "8GiB"
   }
  },
  "build_platform": {
   "linux_aarch64": "linux_64",
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "error_overlinking": true
  },
  "conda_build_tool": "rattler-build",
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "test": "native"
 },
 "feedstock_name": "torchaudio",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/pytorch/audio",
   "license": "BSD-2-Clause",
   "license_family": "BSD-2-Clause",
   "license_file": "LICENSE",
   "summary": "Data manipulation and transformation for audio signal processing, powered by PyTorch"
  },
  "build": {
   "number": "0",
   "script": {
    "env": {
     "cuda_compiler_version": "None"
    },
    "file": "build"
   }
  },
  "extra": {
   "recipe-maintainers": [
    "Tobias-Fischer",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   }
  ],
  "package": {
   "name": "torchaudio",
   "version": "2.5.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "c_stdlib_stub",
    "cmake",
    "ninja",
    "ccache",
    "git"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "pytorch",
    "pytorch * cpu*",
    "bzip2",
    "kaldi",
    "pybind11",
    "xz",
    "zlib"
   ],
   "run": [
    "python",
    "numpy",
    "kaldi",
    "pytorch * cpu*"
   ]
  },
  "schema_version": 1,
  "source": {
   "patches": [
    "patches/0001-point-to-correct-prefix.patch",
    "patches/0002-use-conda-cuda.patch",
    "patches/0003-Apply-CMAKE_ARGS-if-set.patch",
    "patches/0004-Add-missing-skipIfNoFFmpeg-for-TestFileObject.patch",
    "patches/0005-replace-FLT_MAX-for-compatibility-with-newer-cudatoo.patch"
   ],
   "sha256": "200fbb1234c104a3662b444c0bec2acf4049c4b2113a73c0dc5f4e672cc2a4cc",
   "url": "https://github.com/pytorch/audio/archive/refs/tags/v2.5.1.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "ccache",
    "cmake",
    "cxx_compiler_stub",
    "git",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "kaldi",
    "pip",
    "pybind11",
    "python",
    "pytorch",
    "setuptools",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "kaldi",
    "numpy",
    "python",
    "pytorch"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "expecttest",
    "hypothesis",
    "inflect",
    "kaldi",
    "kaldi_io",
    "librosa",
    "numpy",
    "parameterized",
    "pip",
    "pysoundfile",
    "pytest",
    "pytorch-lightning",
    "requests",
    "scipy",
    "sentencepiece",
    "transformers",
    "unidecode"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "home": "https://github.com/pytorch/audio",
   "license": "BSD-2-Clause",
   "license_family": "BSD-2-Clause",
   "license_file": "LICENSE",
   "summary": "Data manipulation and transformation for audio signal processing, powered by PyTorch"
  },
  "build": {
   "number": "0",
   "script": {
    "env": {
     "cuda_compiler_version": "None"
    },
    "file": "build"
   }
  },
  "extra": {
   "recipe-maintainers": [
    "Tobias-Fischer",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   }
  ],
  "package": {
   "name": "torchaudio",
   "version": "2.5.1"
  },
  "requirements": {
   "build": [
    "python",
    "cross-python_linux-64",
    "pytorch",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "c_stdlib_stub",
    "cmake",
    "ninja",
    "ccache",
    "git"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "pytorch",
    "pytorch * cpu*",
    "bzip2",
    "kaldi",
    "pybind11",
    "xz",
    "zlib"
   ],
   "run": [
    "python",
    "numpy",
    "kaldi",
    "pytorch * cpu*"
   ]
  },
  "schema_version": 1,
  "source": {
   "patches": [
    "patches/0001-point-to-correct-prefix.patch",
    "patches/0002-use-conda-cuda.patch",
    "patches/0003-Apply-CMAKE_ARGS-if-set.patch",
    "patches/0004-Add-missing-skipIfNoFFmpeg-for-TestFileObject.patch",
    "patches/0005-replace-FLT_MAX-for-compatibility-with-newer-cudatoo.patch"
   ],
   "sha256": "200fbb1234c104a3662b444c0bec2acf4049c4b2113a73c0dc5f4e672cc2a4cc",
   "url": "https://github.com/pytorch/audio/archive/refs/tags/v2.5.1.tar.gz"
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "ccache",
    "cmake",
    "cross-python_linux-64",
    "cxx_compiler_stub",
    "git",
    "ninja",
    "python",
    "pytorch"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "kaldi",
    "pip",
    "pybind11",
    "python",
    "pytorch",
    "setuptools",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "kaldi",
    "numpy",
    "python",
    "pytorch"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "expecttest",
    "hypothesis",
    "inflect",
    "kaldi",
    "kaldi_io",
    "librosa",
    "numpy",
    "parameterized",
    "pip",
    "pysoundfile",
    "pytest",
    "pytorch-lightning",
    "requests",
    "scipy",
    "sentencepiece",
    "transformers",
    "unidecode"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/pytorch/audio",
   "license": "BSD-2-Clause",
   "license_family": "BSD-2-Clause",
   "license_file": "LICENSE",
   "summary": "Data manipulation and transformation for audio signal processing, powered by PyTorch"
  },
  "build": {
   "number": "0",
   "script": {
    "env": {
     "cuda_compiler_version": "None"
    },
    "file": "build"
   }
  },
  "extra": {
   "recipe-maintainers": [
    "Tobias-Fischer",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   }
  ],
  "package": {
   "name": "torchaudio",
   "version": "2.5.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "c_stdlib_stub",
    "cmake",
    "ninja",
    "ccache",
    "git",
    "python",
    "cross-python_linux-64",
    "pytorch"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "pytorch",
    "pytorch * cpu*",
    "bzip2",
    "kaldi",
    "pybind11",
    "xz",
    "zlib"
   ],
   "run": [
    "python",
    "numpy",
    "kaldi",
    "pytorch * cpu*"
   ]
  },
  "schema_version": 1,
  "source": {
   "patches": [
    "patches/0001-point-to-correct-prefix.patch",
    "patches/0002-use-conda-cuda.patch",
    "patches/0003-Apply-CMAKE_ARGS-if-set.patch",
    "patches/0004-Add-missing-skipIfNoFFmpeg-for-TestFileObject.patch",
    "patches/0005-replace-FLT_MAX-for-compatibility-with-newer-cudatoo.patch"
   ],
   "sha256": "200fbb1234c104a3662b444c0bec2acf4049c4b2113a73c0dc5f4e672cc2a4cc",
   "url": "https://github.com/pytorch/audio/archive/refs/tags/v2.5.1.tar.gz"
  }
 },
 "name": "torchaudio",
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/pytorch/audio",
   "license": "BSD-2-Clause",
   "license_family": "BSD-2-Clause",
   "license_file": "LICENSE",
   "summary": "Data manipulation and transformation for audio signal processing, powered by PyTorch"
  },
  "build": {
   "number": "0",
   "script": {
    "env": {
     "cuda_compiler_version": "None"
    },
    "file": "build"
   }
  },
  "extra": {
   "recipe-maintainers": [
    "Tobias-Fischer",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   }
  ],
  "package": {
   "name": "torchaudio",
   "version": "2.5.1"
  },
  "requirements": {
   "build": [
    "python",
    "cross-python_linux-64",
    "pytorch",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "c_stdlib_stub",
    "cmake",
    "ninja",
    "ccache",
    "git"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "pytorch",
    "pytorch * cpu*",
    "bzip2",
    "kaldi",
    "pybind11",
    "xz",
    "zlib"
   ],
   "run": [
    "python",
    "numpy",
    "kaldi",
    "pytorch * cpu*"
   ]
  },
  "schema_version": 1,
  "source": {
   "patches": [
    "patches/0001-point-to-correct-prefix.patch",
    "patches/0002-use-conda-cuda.patch",
    "patches/0003-Apply-CMAKE_ARGS-if-set.patch",
    "patches/0004-Add-missing-skipIfNoFFmpeg-for-TestFileObject.patch",
    "patches/0005-replace-FLT_MAX-for-compatibility-with-newer-cudatoo.patch"
   ],
   "sha256": "200fbb1234c104a3662b444c0bec2acf4049c4b2113a73c0dc5f4e672cc2a4cc",
   "url": "https://github.com/pytorch/audio/archive/refs/tags/v2.5.1.tar.gz"
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "ccache",
    "cmake",
    "cross-python_linux-64",
    "cxx_compiler_stub",
    "git",
    "ninja",
    "python",
    "pytorch"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "kaldi",
    "pip",
    "pybind11",
    "python",
    "pytorch",
    "setuptools",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "kaldi",
    "numpy",
    "python",
    "pytorch"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "expecttest",
    "hypothesis",
    "inflect",
    "kaldi",
    "kaldi_io",
    "librosa",
    "numpy",
    "parameterized",
    "pip",
    "pysoundfile",
    "pytest",
    "pytorch-lightning",
    "requests",
    "scipy",
    "sentencepiece",
    "transformers",
    "unidecode"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "home": "https://github.com/pytorch/audio",
   "license": "BSD-2-Clause",
   "license_family": "BSD-2-Clause",
   "license_file": "LICENSE",
   "summary": "Data manipulation and transformation for audio signal processing, powered by PyTorch"
  },
  "build": {
   "number": "0",
   "script": {
    "env": {
     "cuda_compiler_version": "None"
    },
    "file": "build"
   }
  },
  "extra": {
   "recipe-maintainers": [
    "Tobias-Fischer",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   },
   {
    "build": null,
    "name": "torchaudio",
    "requirements": {
     "build": [
      "python",
      "cross-python_linux-64",
      "pytorch",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "ccache",
      "git"
     ],
     "host": [
      "python",
      "pip",
      "setuptools",
      "pytorch",
      "pytorch * cpu*",
      "bzip2",
      "kaldi",
      "pybind11",
      "xz",
      "zlib"
     ],
     "run": [
      "python",
      "numpy",
      "kaldi",
      "pytorch * cpu*"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "torchaudio",
        "torchaudio.backend",
        "torchaudio.compliance",
        "torchaudio.datasets",
        "torchaudio.functional",
        "torchaudio.models",
        "torchaudio.pipelines",
        "torchaudio.kaldi_io",
        "torchaudio.utils",
        "torchaudio.sox_effects",
        "torchaudio.transforms"
       ]
      }
     },
     {
      "files": {
       "recipe": [
        "run_tests.sh"
       ],
       "source": [
        "test/**",
        "examples/**"
       ]
      },
      "requirements": {
       "run": [
        "pytest",
        "scipy",
        "numpy",
        "librosa",
        "expecttest",
        "requests",
        "hypothesis",
        "inflect",
        "kaldi * cpu*",
        "kaldi_io",
        "parameterized",
        "pysoundfile",
        "transformers",
        "unidecode",
        "pytorch-lightning",
        "sentencepiece"
       ]
      },
      "script": "bash run_tests.sh"
     }
    ]
   }
  ],
  "package": {
   "name": "torchaudio",
   "version": "2.5.1"
  },
  "requirements": {
   "build": [
    "python",
    "cross-python_linux-64",
    "pytorch",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "c_stdlib_stub",
    "cmake",
    "ninja",
    "ccache",
    "git"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "pytorch",
    "pytorch * cpu*",
    "bzip2",
    "kaldi",
    "pybind11",
    "xz",
    "zlib"
   ],
   "run": [
    "python",
    "numpy",
    "kaldi",
    "pytorch * cpu*"
   ]
  },
  "schema_version": 1,
  "source": {
   "patches": [
    "patches/0001-point-to-correct-prefix.patch",
    "patches/0002-use-conda-cuda.patch",
    "patches/0003-Apply-CMAKE_ARGS-if-set.patch",
    "patches/0004-Add-missing-skipIfNoFFmpeg-for-TestFileObject.patch",
    "patches/0005-replace-FLT_MAX-for-compatibility-with-newer-cudatoo.patch"
   ],
   "sha256": "200fbb1234c104a3662b444c0bec2acf4049c4b2113a73c0dc5f4e672cc2a4cc",
   "url": "https://github.com/pytorch/audio/archive/refs/tags/v2.5.1.tar.gz"
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "ccache",
    "cmake",
    "cross-python_linux-64",
    "cxx_compiler_stub",
    "git",
    "ninja",
    "python",
    "pytorch"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "kaldi",
    "pip",
    "pybind11",
    "python",
    "pytorch",
    "setuptools",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "kaldi",
    "numpy",
    "python",
    "pytorch"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "expecttest",
    "hypothesis",
    "inflect",
    "kaldi",
    "kaldi_io",
    "librosa",
    "numpy",
    "parameterized",
    "pip",
    "pysoundfile",
    "pytest",
    "pytorch-lightning",
    "requests",
    "scipy",
    "sentencepiece",
    "transformers",
    "unidecode"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "torchaudio"
  ]
 },
 "parsing_error": "feedstock parsing error: Error running 'conda-forge-tick-container parse-feedstock --existing-feedstock-node-attrs - --log-level info --mark-not-archived' in container - error CalledProcessError raised:\n1, ['rattler-build', 'build', '--render-only', '--variant-config', PosixPath('/tmp/tmp25twqjoj/torchaudio-feedstock-main/.ci_support/linux_64_c_compiler_version11cuda_compilernvcccuda_compiler_version11.8cxx_compiler_version11python3.10.____cpython.yaml'), '--build-platform', 'linux-64']\nTraceback (most recent call last):\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/make_graph.py\", line 102, in try_load_feedstock\n    data = load_feedstock(name, attrs.data, mark_not_archived=mark_not_archived)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 705, in load_feedstock\n    return load_feedstock_containerized(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 657, in load_feedstock_containerized\n    data = run_container_operation(\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/micromamba/envs/cf-scripts/lib/python3.11/site-packages/conda_forge_feedstock_ops/container_utils.py\", line 221, in run_container_operation\n    raise ContainerRuntimeError(\nconda_forge_feedstock_ops.container_utils.ContainerRuntimeError: Error running 'conda-forge-tick-container parse-feedstock --existing-feedstock-node-attrs - --log-level info --mark-not-archived' in container - error CalledProcessError raised:\n1, ['rattler-build', 'build', '--render-only', '--variant-config', PosixPath('/tmp/tmp25twqjoj/torchaudio-feedstock-main/.ci_support/linux_64_c_compiler_version11cuda_compilernvcccuda_compiler_version11.8cxx_compiler_version11python3.10.____cpython.yaml'), '--build-platform', 'linux-64']\n",
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "osx_64",
  "osx_arm64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/torchaudio.json"
 },
 "raw_meta_yaml": "# yaml-language-server: $schema=https://raw.githubusercontent.com/prefix-dev/recipe-format/main/schema.json\n\ncontext:\n  name: torchaudio\n  version: \"2.5.1\"\n  build_number: 0\n  cuda_version: ${{ env.get(\"CONDA_OVERRIDE_CUDA\", default=\"None\") }}\n  cuda: ${{ \"true\" if cuda_version != \"None\" else \"false\" }}\n  cuda_build_string: cuda_${{ cuda_version | version_to_buildstring }}\n  string_prefix: ${{ cuda_build_string if cuda ==  \"true\" else \"cpu_\" }}\n\npackage:\n  name: ${{ name|lower }}\n  version: ${{ version }}\n\nsource:\n  - url: https://github.com/pytorch/audio/archive/refs/tags/v${{ version }}.tar.gz\n    sha256: 200fbb1234c104a3662b444c0bec2acf4049c4b2113a73c0dc5f4e672cc2a4cc\n    patches:\n      - patches/0001-point-to-correct-prefix.patch\n      - patches/0002-use-conda-cuda.patch\n      - patches/0003-Apply-CMAKE_ARGS-if-set.patch\n      - patches/0004-Add-missing-skipIfNoFFmpeg-for-TestFileObject.patch\n      - patches/0005-replace-FLT_MAX-for-compatibility-with-newer-cudatoo.patch\n\nbuild:\n  number: ${{ build_number }}\n  skip:\n    - win\n    - match(cuda_compiler_version, \"11.8\") and aarch64\n  string: ${{ string_prefix }}py${{ python | version_to_buildstring }}h${{ hash }}_${{ build_number }}\n  variant:\n    use_keys:\n      # use cuda from the variant config, e.g. to build multiple CUDA variants\n      - ${{ \"cuda\" if cuda == \"true\" }}\n    # this will down-prioritize the cuda variant versus other variants of the package\n    down_prioritize_variant: ${{ 1 if cuda == \"true\" else 0 }}\n  script:\n    file: build\n    env:\n      cuda_compiler_version: ${{ cuda_version | default('None') }}\n\nrequirements:\n  build:\n    - if: build_platform != target_platform\n      then:\n        - python\n        - cross-python_${{ target_platform }}\n        - pytorch\n\n        - if: match(cuda_version, \">=12\")\n          then:\n            - cuda-driver-dev\n            - cuda-cudart-dev\n            - cuda-nvrtc-dev\n            - cuda-nvtx-dev\n            - cuda-nvml-dev\n            - cuda-profiler-api\n            - libcublas-dev\n            - libcufft-dev\n            - libcurand-dev\n            - libcusolver-dev\n            - libcusparse-dev\n\n    - ${{ compiler('cxx') }}\n    - ${{ compiler('c') }}\n    - ${{ stdlib(\"c\") }}\n    - cmake\n    - ninja\n    - ccache\n    - git\n\n    - if: cuda == \"true\"\n      then:\n        - ${{ compiler('cuda') }}\n        - cuda-version ==${{ cuda_version }}\n\n  host:\n    - python\n    - pip\n    - setuptools\n    - pytorch\n    - ${{ \"pytorch * cuda*\" if cuda == \"true\" }}\n    - ${{ \"pytorch * cpu*\" if cuda == \"false\" }}\n    - bzip2\n    - kaldi\n    - pybind11\n    # - sox\n    # - ffmpeg\n    - xz\n    - zlib\n\n    - if: cuda == \"true\"\n      then:\n        - cuda-version ==${{ cuda_version }}\n\n    - if: match(cuda_version, \">=12\")\n      then:\n        - cuda-driver-dev\n        - cuda-cudart-dev\n        - cuda-nvrtc-dev\n        - cuda-nvtx-dev\n        - cuda-nvml-dev\n        - cuda-profiler-api\n        - libcublas-dev\n        - libcufft-dev\n        - libcurand-dev\n        - libcusolver-dev\n        - libcusparse-dev\n  run:\n    - python\n    - numpy\n    - kaldi\n    - ${{ \"pytorch * cuda*\" if cuda == \"true\" }}\n    - ${{ \"pytorch * cpu*\" if cuda == \"false\" }}\n\n  ignore_run_exports:\n    from_package:\n      - if: match(cuda_version, \">=12\")\n        then:\n          - cuda-nvrtc-dev\n          - cuda-nvtx-dev\n          - libcublas-dev\n          - libcufft-dev\n          - libcurand-dev\n          - libcusolver-dev\n          - libcusparse-dev\n\ntests:\n  - python:\n      imports:\n        - torchaudio\n        - torchaudio.backend\n        - torchaudio.compliance\n        - torchaudio.datasets\n        - torchaudio.functional\n        - torchaudio.models\n        - torchaudio.pipelines\n        - torchaudio.kaldi_io\n        - torchaudio.utils\n        - torchaudio.sox_effects\n        - torchaudio.transforms\n      pip_check: true\n\n  - requirements:\n      run:\n        - pytest\n        - scipy\n        - numpy\n        - librosa\n        - expecttest\n        - requests\n        - hypothesis\n        - inflect\n        # gpu version of kaldi tries to load libcuda, which we don't have\n        - kaldi * cpu*\n        - kaldi_io\n        - parameterized\n        - pysoundfile\n        - transformers\n        - unidecode\n        - inflect\n        # - sox\n        - pytorch-lightning\n        - sentencepiece\n    files:\n      source:\n        - test/\n        - examples/\n      recipe:\n        - run_tests.sh\n    script:\n      - bash run_tests.sh\n\nabout:\n  homepage: https://github.com/pytorch/audio\n  license: BSD-2-Clause\n  license_file:\n    - LICENSE\n    - third_party/LICENSES_BUNDLED.txt\n  summary: Data manipulation and transformation for audio signal processing, powered by PyTorch\n\nextra:\n  recipe-maintainers:\n    - Tobias-Fischer\n    - h-vetinari\n",
 "req": {
  "__set__": true,
  "elements": [
   "bzip2",
   "c_compiler_stub",
   "c_stdlib_stub",
   "ccache",
   "cmake",
   "cross-python_linux-64",
   "cxx_compiler_stub",
   "git",
   "kaldi",
   "ninja",
   "numpy",
   "pip",
   "pybind11",
   "python",
   "pytorch",
   "setuptools",
   "xz",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "ccache",
    "cmake",
    "cross-python_linux-64",
    "cxx_compiler_stub",
    "git",
    "ninja",
    "python",
    "pytorch"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "kaldi",
    "pip",
    "pybind11",
    "python",
    "pytorch",
    "setuptools",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "kaldi",
    "numpy",
    "python",
    "pytorch"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "expecttest",
    "hypothesis",
    "inflect",
    "kaldi",
    "kaldi_io",
    "librosa",
    "numpy",
    "parameterized",
    "pip",
    "pysoundfile",
    "pytest",
    "pytorch-lightning",
    "requests",
    "scipy",
    "sentencepiece",
    "transformers",
    "unidecode"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "ccache",
    "cmake",
    "cross-python_linux-64",
    "cxx_compiler_stub",
    "git",
    "ninja",
    "python",
    "pytorch"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "kaldi",
    "pip",
    "pybind11",
    "python",
    "pytorch",
    "pytorch * cpu*",
    "setuptools",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "kaldi",
    "numpy",
    "python",
    "pytorch * cpu*"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "expecttest",
    "hypothesis",
    "inflect",
    "kaldi * cpu*",
    "kaldi_io",
    "librosa",
    "numpy",
    "parameterized",
    "pip",
    "pysoundfile",
    "pytest",
    "pytorch-lightning",
    "requests",
    "scipy",
    "sentencepiece",
    "transformers",
    "unidecode"
   ]
  }
 },
 "url": "https://github.com/pytorch/audio/archive/refs/tags/v2.5.1.tar.gz",
 "version": "2.5.1",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/torchaudio.json"
 }
}