{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "error_overlinking": true
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "cyrk",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "CyRK provides fast integration tools to solve systems of ODEs using an adaptive time stepping scheme.\nCyRK can accept differential equations that are written in pure Python, njited numba, or cython-based cdef\nfunctions. These kinds of functions are generally easier to implement than pure c functions and can be used in\nexisting Python software. Using CyRK can speed up development time while avoiding the slow performance that comes\nwith using pure Python-based solvers like SciPy's `solve_ivp`.\n",
   "dev_url": "https://github.com/jrenaud90/CyRK",
   "doc_url": "https://github.com/jrenaud90/CyRK/tree/main/Documentation",
   "home": "https://github.com/jrenaud90/CyRK",
   "license": "CC-BY-SA-4.0",
   "license_file": "LICENSE.md",
   "summary": "Runge-Kutta ODE Integrator Implemented in Cython and Numba."
  },
  "build": {
   "number": "0",
   "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
  },
  "extra": {
   "recipe-maintainers": [
    "jrenaud90"
   ]
  },
  "package": {
   "name": "cyrk",
   "version": "0.12.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_stdlib_stub"
   ],
   "host": [
    "python",
    "setuptools >=64.0.0",
    "numpy >=1.22,<2",
    "cython >=3.0.0",
    "wheel >=0.38",
    "pip"
   ],
   "run": [
    "python",
    "numba >=0.54.1",
    "scipy >=1.9.3",
    "numpy"
   ]
  },
  "schema_version": 0,
  "source": {
   "sha256": "e3359369a702e6056d3da3e2d3bda3fa3ee1acff72de827e6203b1fd2419f466",
   "url": "https://pypi.org/packages/source/C/CyRK/cyrk-0.12.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "python -c \"import CyRK; CyRK.test_nbrk(); CyRK.test_cysolver(); CyRK.test_pysolver()\""
   ],
   "imports": [
    "CyRK"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numba",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "CyRK provides fast integration tools to solve systems of ODEs using an adaptive time stepping scheme.\nCyRK can accept differential equations that are written in pure Python, njited numba, or cython-based cdef\nfunctions. These kinds of functions are generally easier to implement than pure c functions and can be used in\nexisting Python software. Using CyRK can speed up development time while avoiding the slow performance that comes\nwith using pure Python-based solvers like SciPy's `solve_ivp`.\n",
   "dev_url": "https://github.com/jrenaud90/CyRK",
   "doc_url": "https://github.com/jrenaud90/CyRK/tree/main/Documentation",
   "home": "https://github.com/jrenaud90/CyRK",
   "license": "CC-BY-SA-4.0",
   "license_file": "LICENSE.md",
   "summary": "Runge-Kutta ODE Integrator Implemented in Cython and Numba."
  },
  "build": {
   "number": "0",
   "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
  },
  "extra": {
   "recipe-maintainers": [
    "jrenaud90"
   ]
  },
  "package": {
   "name": "cyrk",
   "version": "0.12.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_stdlib_stub"
   ],
   "host": [
    "python",
    "setuptools >=64.0.0",
    "numpy >=1.22,<2",
    "cython >=3.0.0",
    "wheel >=0.38",
    "pip"
   ],
   "run": [
    "python",
    "numba >=0.54.1",
    "scipy >=1.9.3",
    "numpy"
   ]
  },
  "schema_version": 0,
  "source": {
   "sha256": "e3359369a702e6056d3da3e2d3bda3fa3ee1acff72de827e6203b1fd2419f466",
   "url": "https://pypi.org/packages/source/C/CyRK/cyrk-0.12.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "python -c \"import CyRK; CyRK.test_nbrk(); CyRK.test_cysolver(); CyRK.test_pysolver()\""
   ],
   "imports": [
    "CyRK"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "cyrk",
 "osx_64_meta_yaml": {
  "about": {
   "description": "CyRK provides fast integration tools to solve systems of ODEs using an adaptive time stepping scheme.\nCyRK can accept differential equations that are written in pure Python, njited numba, or cython-based cdef\nfunctions. These kinds of functions are generally easier to implement than pure c functions and can be used in\nexisting Python software. Using CyRK can speed up development time while avoiding the slow performance that comes\nwith using pure Python-based solvers like SciPy's `solve_ivp`.\n",
   "dev_url": "https://github.com/jrenaud90/CyRK",
   "doc_url": "https://github.com/jrenaud90/CyRK/tree/main/Documentation",
   "home": "https://github.com/jrenaud90/CyRK",
   "license": "CC-BY-SA-4.0",
   "license_file": "LICENSE.md",
   "summary": "Runge-Kutta ODE Integrator Implemented in Cython and Numba."
  },
  "build": {
   "number": "0",
   "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
  },
  "extra": {
   "recipe-maintainers": [
    "jrenaud90"
   ]
  },
  "package": {
   "name": "cyrk",
   "version": "0.12.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_stdlib_stub"
   ],
   "host": [
    "python",
    "setuptools >=64.0.0",
    "numpy >=1.22,<2",
    "cython >=3.0.0",
    "wheel >=0.38",
    "pip"
   ],
   "run": [
    "python",
    "numba >=0.54.1",
    "scipy >=1.9.3",
    "numpy"
   ]
  },
  "schema_version": 0,
  "source": {
   "sha256": "e3359369a702e6056d3da3e2d3bda3fa3ee1acff72de827e6203b1fd2419f466",
   "url": "https://pypi.org/packages/source/C/CyRK/cyrk-0.12.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "python -c \"import CyRK; CyRK.test_nbrk(); CyRK.test_cysolver(); CyRK.test_pysolver()\""
   ],
   "imports": [
    "CyRK"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numba",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cyrk"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/cyrk.json"
 },
 "raw_meta_yaml": "{% set name = \"CyRK\" %}\n{% set version = \"0.12.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/cyrk-{{ version }}.tar.gz\n  sha256: e3359369a702e6056d3da3e2d3bda3fa3ee1acff72de827e6203b1fd2419f466\n\nbuild:\n  skip: true  # [py>312]\n  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation\n  number: 0\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ stdlib('c') }}\n  host:\n    - python\n    - setuptools >=64.0.0\n    - numpy >=1.22,<2\n    - cython >=3.0.0\n    - wheel >=0.38\n    - pip\n  run:\n    - python\n    - numba >=0.54.1\n    - scipy >=1.9.3\n    - {{ pin_compatible('numpy') }}\n\ntest:\n  imports:\n    - CyRK\n  commands:\n    - pip check\n    - python -c \"import CyRK; CyRK.test_nbrk(); CyRK.test_cysolver(); CyRK.test_pysolver()\"\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/jrenaud90/CyRK\n  summary: Runge-Kutta ODE Integrator Implemented in Cython and Numba.\n  description: |\n    CyRK provides fast integration tools to solve systems of ODEs using an adaptive time stepping scheme.\n    CyRK can accept differential equations that are written in pure Python, njited numba, or cython-based cdef\n    functions. These kinds of functions are generally easier to implement than pure c functions and can be used in\n    existing Python software. Using CyRK can speed up development time while avoiding the slow performance that comes\n    with using pure Python-based solvers like SciPy's `solve_ivp`.\n  license: CC-BY-SA-4.0\n  license_file: LICENSE.md\n  doc_url: https://github.com/jrenaud90/CyRK/tree/main/Documentation\n  dev_url: https://github.com/jrenaud90/CyRK\n\nextra:\n  recipe-maintainers:\n    - jrenaud90\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "c_stdlib_stub",
   "cxx_compiler_stub",
   "cython",
   "numba",
   "numpy",
   "pip",
   "python",
   "scipy",
   "setuptools",
   "wheel"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "cython",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "numba",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython >=3.0.0",
    "numpy >=1.22,<2",
    "pip",
    "python",
    "setuptools >=64.0.0",
    "wheel >=0.38"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numba >=0.54.1",
    "numpy",
    "python",
    "scipy >=1.9.3"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.org/packages/source/C/CyRK/cyrk-0.12.1.tar.gz",
 "version": "0.12.1",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/cyrk.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "CyRK provides fast integration tools to solve systems of ODEs using an adaptive time stepping scheme.\nCyRK can accept differential equations that are written in pure Python, njited numba, or cython-based cdef\nfunctions. These kinds of functions are generally easier to implement than pure c functions and can be used in\nexisting Python software. Using CyRK can speed up development time while avoiding the slow performance that comes\nwith using pure Python-based solvers like SciPy's `solve_ivp`.\n",
   "dev_url": "https://github.com/jrenaud90/CyRK",
   "doc_url": "https://github.com/jrenaud90/CyRK/tree/main/Documentation",
   "home": "https://github.com/jrenaud90/CyRK",
   "license": "CC-BY-SA-4.0",
   "license_file": "LICENSE.md",
   "summary": "Runge-Kutta ODE Integrator Implemented in Cython and Numba."
  },
  "build": {
   "number": "0",
   "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
  },
  "extra": {
   "recipe-maintainers": [
    "jrenaud90"
   ]
  },
  "package": {
   "name": "cyrk",
   "version": "0.12.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_stdlib_stub"
   ],
   "host": [
    "python",
    "setuptools >=64.0.0",
    "numpy >=1.22,<2",
    "cython >=3.0.0",
    "wheel >=0.38",
    "pip"
   ],
   "run": [
    "python",
    "numba >=0.54.1",
    "scipy >=1.9.3",
    "numpy"
   ]
  },
  "schema_version": 0,
  "source": {
   "sha256": "e3359369a702e6056d3da3e2d3bda3fa3ee1acff72de827e6203b1fd2419f466",
   "url": "https://pypi.org/packages/source/C/CyRK/cyrk-0.12.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "python -c \"import CyRK; CyRK.test_nbrk(); CyRK.test_cysolver(); CyRK.test_pysolver()\""
   ],
   "imports": [
    "CyRK"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numba",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 }
}