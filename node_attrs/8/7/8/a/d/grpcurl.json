{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "conda_build": {
   "error_overlinking": true
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "grpcurl",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "grpcurl is a command-line tool that lets you interact with gRPC servers. It's basically curl for gRPC servers.\n",
   "home": "https://github.com/fullstorydev/grpcurl",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": [
    "LICENSE",
    "license-files/"
   ],
   "summary": "Like cURL, but for gRPC: Command-line tool for interacting with gRPC servers"
  },
  "build": {
   "number": "0",
   "script": [
    "go build -trimpath -ldflags \"-s -w -X main.version=v1.9.2\" -o $PREFIX/bin/ ./cmd/grpcurl/",
    "go-licenses save . --save_path=\"./license-files/\"",
    "chmod -R u+w $(go env GOPATH) && rm -r $(go env GOPATH)"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "seowalex"
   ]
  },
  "package": {
   "name": "grpcurl",
   "version": "1.9.2"
  },
  "requirements": {
   "build": [
    "go_compiler_stub",
    "go-licenses"
   ]
  },
  "schema_version": 0,
  "source": {
   "sha256": "9259935b6ef86d701caef60be338600798348368c0f4dca063a45cf88d8186a8",
   "url": "https://github.com/fullstorydev/grpcurl/archive/v1.9.2.tar.gz"
  },
  "test": {
   "commands": [
    "grpcurl -version"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "go-licenses",
    "go_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "grpcurl is a command-line tool that lets you interact with gRPC servers. It's basically curl for gRPC servers.\n",
   "home": "https://github.com/fullstorydev/grpcurl",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": [
    "LICENSE",
    "license-files/"
   ],
   "summary": "Like cURL, but for gRPC: Command-line tool for interacting with gRPC servers"
  },
  "build": {
   "number": "0",
   "script": [
    "go build -trimpath -ldflags \"-s -w -X main.version=v1.9.2\" -o $PREFIX/bin/ ./cmd/grpcurl/",
    "go-licenses save . --save_path=\"./license-files/\"",
    "chmod -R u+w $(go env GOPATH) && rm -r $(go env GOPATH)",
    "go build -trimpath -ldflags \"-s -w -X main.version=v1.9.2\" -o %LIBRARY_BIN%/ ./cmd/grpcurl/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "seowalex"
   ]
  },
  "package": {
   "name": "grpcurl",
   "version": "1.9.2"
  },
  "requirements": {
   "build": [
    "go_compiler_stub",
    "go-licenses"
   ]
  },
  "schema_version": 0,
  "source": {
   "sha256": "9259935b6ef86d701caef60be338600798348368c0f4dca063a45cf88d8186a8",
   "url": "https://github.com/fullstorydev/grpcurl/archive/v1.9.2.tar.gz"
  },
  "test": {
   "commands": [
    "grpcurl -version"
   ]
  }
 },
 "name": "grpcurl",
 "osx_64_meta_yaml": {
  "about": {
   "description": "grpcurl is a command-line tool that lets you interact with gRPC servers. It's basically curl for gRPC servers.\n",
   "home": "https://github.com/fullstorydev/grpcurl",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": [
    "LICENSE",
    "license-files/"
   ],
   "summary": "Like cURL, but for gRPC: Command-line tool for interacting with gRPC servers"
  },
  "build": {
   "number": "0",
   "script": [
    "go build -trimpath -ldflags \"-s -w -X main.version=v1.9.2\" -o $PREFIX/bin/ ./cmd/grpcurl/",
    "go-licenses save . --save_path=\"./license-files/\"",
    "chmod -R u+w $(go env GOPATH) && rm -r $(go env GOPATH)"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "seowalex"
   ]
  },
  "package": {
   "name": "grpcurl",
   "version": "1.9.2"
  },
  "requirements": {
   "build": [
    "go_compiler_stub",
    "go-licenses"
   ]
  },
  "schema_version": 0,
  "source": {
   "sha256": "9259935b6ef86d701caef60be338600798348368c0f4dca063a45cf88d8186a8",
   "url": "https://github.com/fullstorydev/grpcurl/archive/v1.9.2.tar.gz"
  },
  "test": {
   "commands": [
    "grpcurl -version"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "go-licenses",
    "go_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "grpcurl"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/grpcurl.json"
 },
 "raw_meta_yaml": "{% set goname = \"github.com/fullstorydev/grpcurl\" %}\n{% set version = \"1.9.2\" %}\n\n{% set name = goname.split('/')[-1] %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://{{ goname }}/archive/v{{ version }}.tar.gz\n  sha256: 9259935b6ef86d701caef60be338600798348368c0f4dca063a45cf88d8186a8\n\nbuild:\n  script:\n    - go build -trimpath -ldflags \"-s -w -X main.version=v{{ version }}\" -o $PREFIX/bin/ ./cmd/{{ name }}/  # [unix]\n    - go build -trimpath -ldflags \"-s -w -X main.version=v{{ version }}\" -o %LIBRARY_BIN%/ ./cmd/{{ name }}/  # [win]\n    - go-licenses save . --save_path=\"./license-files/\"\n    - chmod -R u+w $(go env GOPATH) && rm -r $(go env GOPATH)  # [unix]\n  number: 0\n\nrequirements:\n  build:\n    - {{ compiler('go') }}\n    - go-licenses\n\ntest:\n  commands:\n    - {{ name }} -version\n\nabout:\n  home: https://{{ goname }}\n  summary: 'Like cURL, but for gRPC: Command-line tool for interacting with gRPC servers'\n  description: |\n    grpcurl is a command-line tool that lets you interact with gRPC servers. It's basically curl for gRPC servers.\n  license: MIT\n  license_family: MIT\n  license_file:\n    - LICENSE\n    - license-files/\n\nextra:\n  recipe-maintainers:\n    - seowalex\n",
 "req": {
  "__set__": true,
  "elements": [
   "go-licenses",
   "go_compiler_stub"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "go-licenses",
    "go_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "go-licenses",
    "go_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/fullstorydev/grpcurl/archive/v1.9.2.tar.gz",
 "version": "1.9.2",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/grpcurl.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "grpcurl is a command-line tool that lets you interact with gRPC servers. It's basically curl for gRPC servers.\n",
   "home": "https://github.com/fullstorydev/grpcurl",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": [
    "LICENSE",
    "license-files/"
   ],
   "summary": "Like cURL, but for gRPC: Command-line tool for interacting with gRPC servers"
  },
  "build": {
   "number": "0",
   "script": [
    "go build -trimpath -ldflags \"-s -w -X main.version=v1.9.2\" -o %LIBRARY_BIN%/ ./cmd/grpcurl/",
    "go-licenses save . --save_path=\"./license-files/\""
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "seowalex"
   ]
  },
  "package": {
   "name": "grpcurl",
   "version": "1.9.2"
  },
  "requirements": {
   "build": [
    "go_compiler_stub",
    "go-licenses"
   ]
  },
  "schema_version": 0,
  "source": {
   "sha256": "9259935b6ef86d701caef60be338600798348368c0f4dca063a45cf88d8186a8",
   "url": "https://github.com/fullstorydev/grpcurl/archive/v1.9.2.tar.gz"
  },
  "test": {
   "commands": [
    "grpcurl -version"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "go-licenses",
    "go_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}