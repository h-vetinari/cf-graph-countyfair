{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "azure": {
   "free_disk_space": true,
   "settings_linux": {
    "swapfile_size": "15GiB"
   },
   "settings_win": {
    "variables": {
     "CONDA_BLD_PATH": "C:\\\\bld\\\\",
     "MINIFORGE_HOME": "C:\\Miniforge",
     "SET_PAGEFILE": "True"
    }
   }
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "flang",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project",
   "home": "https://flang.llvm.org",
   "license": "Apache-2.0",
   "license_file": "flang/LICENSE.TXT",
   "summary": "Flang is a Fortran compiler targeting LLVM."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "flang",
   "recipe-maintainers": [
    "isuruf",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "name": "libflang",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "clangdev ==19.1.7",
      "compiler-rt ==19.1.7",
      "llvmdev ==19.1.7",
      "mlir ==19.1.7"
     ]
    },
    "script": "install_libflang.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libFortranRuntime.so"
     ]
    }
   },
   {
    "name": "flang",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "clangdev ==19.1.7",
      "compiler-rt ==19.1.7",
      "llvmdev ==19.1.7",
      "mlir ==19.1.7",
      "llvm ==19.1.7",
      "libclang-cpp ==19.1.7",
      "libflang"
     ],
     "run": [
      "sysroot_linux-64 >=2.17",
      "clang ==19.1.7",
      "libflang"
     ]
    },
    "run_exports": {
     "strong": [
      "libflang >=19.1.7"
     ]
    },
    "script": "install_flang.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/bin/flang-new"
     ]
    }
   }
  ],
  "package": {
   "name": "flang-split",
   "version": "19.1.7"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "numpy *"
   ],
   "host": [
    "clangdev ==19.1.7",
    "compiler-rt ==19.1.7",
    "lit ==19.1.7",
    "llvmdev ==19.1.7",
    "mlir ==19.1.7",
    "zlib"
   ]
  },
  "schema_version": 0,
  "source": {
   "sha256": "59abea1c22e64933fad4de1671a61cdb934098793c7a31b333ff58dc41bff36c",
   "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-19.1.7.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "numpy"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clangdev",
    "compiler-rt",
    "libclang-cpp",
    "libflang",
    "lit",
    "llvm",
    "llvmdev",
    "mlir",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "clang",
    "libflang",
    "sysroot_linux-64"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project",
   "home": "https://flang.llvm.org",
   "license": "Apache-2.0",
   "license_file": "flang/LICENSE.TXT",
   "summary": "Flang is a Fortran compiler targeting LLVM."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "flang",
   "recipe-maintainers": [
    "isuruf",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "name": "libflang",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "clangdev ==19.1.7",
      "compiler-rt ==19.1.7",
      "llvmdev ==19.1.7",
      "mlir ==19.1.7"
     ]
    },
    "script": "install_libflang.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libFortranRuntime.so"
     ]
    }
   },
   {
    "name": "flang",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "clangdev ==19.1.7",
      "compiler-rt ==19.1.7",
      "llvmdev ==19.1.7",
      "mlir ==19.1.7",
      "llvm ==19.1.7",
      "libclang-cpp ==19.1.7",
      "libflang"
     ],
     "run": [
      "sysroot_linux-64 >=2.17",
      "clang ==19.1.7",
      "libflang"
     ]
    },
    "run_exports": {
     "strong": [
      "libflang >=19.1.7"
     ]
    },
    "script": "install_flang.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/bin/flang-new"
     ]
    }
   },
   {
    "name": "libflang",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "clangdev ==19.1.7",
      "compiler-rt ==19.1.7",
      "llvmdev ==19.1.7",
      "mlir ==19.1.7"
     ]
    },
    "script": "install_libflang.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_LIB%\\FortranRuntime.lib exit 1"
     ]
    }
   },
   {
    "name": "flang",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "clangdev ==19.1.7",
      "compiler-rt ==19.1.7",
      "llvmdev ==19.1.7",
      "mlir ==19.1.7",
      "llvm ==19.1.7",
      "libclang-cpp ==19.1.7",
      "zlib",
      "zstd",
      "libflang"
     ],
     "run": [
      "clang ==19.1.7",
      "compiler-rt ==19.1.7",
      "libflang"
     ]
    },
    "run_exports": {
     "strong": [
      "libflang >=19.1.7"
     ]
    },
    "script": "install_flang.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\flang-new.exe exit 1"
     ]
    }
   }
  ],
  "package": {
   "name": "flang-split",
   "version": "19.1.7"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "numpy *"
   ],
   "host": [
    "clangdev ==19.1.7",
    "compiler-rt ==19.1.7",
    "lit ==19.1.7",
    "llvmdev ==19.1.7",
    "mlir ==19.1.7",
    "zlib"
   ]
  },
  "schema_version": 0,
  "source": {
   "sha256": "59abea1c22e64933fad4de1671a61cdb934098793c7a31b333ff58dc41bff36c",
   "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-19.1.7.tar.gz"
  }
 },
 "name": "flang-split",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "flang",
   "libflang"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/flang.json"
 },
 "raw_meta_yaml": "{% set version = \"19.1.7\" %}\n\npackage:\n  name: flang-split\n  version: {{ version }}\n\nsource:\n  url: https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-{{ version.replace(\".rc\", \"-rc\") }}.tar.gz\n  sha256: 59abea1c22e64933fad4de1671a61cdb934098793c7a31b333ff58dc41bff36c\n\nbuild:\n  number: 0\n  # intentionally only windows (main target) & linux (debuggability)\n  skip: true  # [osx]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ stdlib('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n    - mlir =={{ version }}     # [build_platform != target_platform]\n    # for showing CPU info of CI agent\n    - numpy *\n  host:\n    - clangdev =={{ version }}\n    - compiler-rt =={{ version }}\n    - lit =={{ version }}\n    - llvmdev =={{ version }}\n    - mlir =={{ version }}\n    - zlib\n\noutputs:\n  - name: libflang\n    script: install_libflang.sh  # [unix]\n    script: install_libflang.bat  # [win]\n    requirements:\n      build:\n        # for strong run-exports\n        - {{ compiler('c') }}\n        - {{ stdlib('c') }}\n        - {{ compiler('cxx') }}\n      host:\n        - clangdev =={{ version }}\n        - compiler-rt =={{ version }}\n        - llvmdev =={{ version }}\n        - mlir =={{ version }}\n    test:\n      commands:\n        # shared lib on linux\n        - test -f $PREFIX/lib/libFortranRuntime.so              # [linux]\n        # static lib on win (fails to export symbols for shared build)\n        - if not exist %LIBRARY_LIB%\\FortranRuntime.lib exit 1  # [win]\n\n  - name: flang\n    script: install_flang.sh  # [unix]\n    script: install_flang.bat  # [win]\n    run_exports:\n      strong:\n        - libflang >={{ version }}\n    requirements:\n      build:\n        - cmake\n        - ninja\n        # for strong run-exports\n        - {{ compiler('c') }}\n        - {{ stdlib('c') }}\n        - {{ compiler('cxx') }}\n      host:\n        - clangdev =={{ version }}\n        - compiler-rt =={{ version }}\n        - llvmdev =={{ version }}\n        - mlir =={{ version }}\n        # for required run-exports\n        - llvm =={{ version }}\n        - libclang-cpp =={{ version }}\n        # ninja really wants to find z.lib on win\n        - zlib  # [win]\n        - zstd  # [win]\n        - {{ pin_subpackage('libflang', exact=True) }}\n      run:\n        - sysroot_{{ target_platform }} >={{ c_stdlib_version }}    # [linux]\n        - clang =={{ version }}\n        - compiler-rt =={{ version }}   # [win]\n        - {{ pin_subpackage('libflang', exact=True) }}\n    test:\n      commands:\n        # see naming discussion: https://discourse.llvm.org/t/reviving-rename-flang-new-to-flang/68130/2\n        - test -f $PREFIX/bin/flang-new                     # [linux]\n        - if not exist %LIBRARY_BIN%\\flang-new.exe exit 1   # [win]\n\nabout:\n  home: https://flang.llvm.org\n  license: Apache-2.0\n  license_file: flang/LICENSE.TXT\n  summary: Flang is a Fortran compiler targeting LLVM.\n  dev_url: https://github.com/llvm/llvm-project\n\nextra:\n  recipe-maintainers:\n    - isuruf\n    - h-vetinari\n  feedstock-name: flang\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "c_stdlib_stub",
   "clang",
   "clangdev",
   "cmake",
   "compiler-rt",
   "cxx_compiler_stub",
   "libclang-cpp",
   "libflang",
   "lit",
   "llvm",
   "llvmdev",
   "mlir",
   "ninja",
   "numpy",
   "sysroot_linux-64",
   "zlib",
   "zstd"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "numpy"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "clangdev",
    "compiler-rt",
    "cxx_compiler_stub",
    "libclang-cpp",
    "libflang",
    "linux-sysroot",
    "lit",
    "llvm",
    "llvmdev",
    "mlir",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "clang",
    "compiler-rt",
    "cxx_compiler_stub",
    "libflang",
    "linux-sysroot",
    "sysroot_linux-64"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "numpy *"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clangdev ==19.1.7",
    "compiler-rt ==19.1.7",
    "libclang-cpp ==19.1.7",
    "libflang",
    "lit ==19.1.7",
    "llvm ==19.1.7",
    "llvmdev ==19.1.7",
    "mlir ==19.1.7",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "clang ==19.1.7",
    "compiler-rt ==19.1.7",
    "libflang",
    "sysroot_linux-64 >=2.17"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-19.1.7.tar.gz",
 "version": "19.1.7",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/flang.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project",
   "home": "https://flang.llvm.org",
   "license": "Apache-2.0",
   "license_file": "flang/LICENSE.TXT",
   "summary": "Flang is a Fortran compiler targeting LLVM."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "flang",
   "recipe-maintainers": [
    "isuruf",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "name": "libflang",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "clangdev ==19.1.7",
      "compiler-rt ==19.1.7",
      "llvmdev ==19.1.7",
      "mlir ==19.1.7"
     ]
    },
    "script": "install_libflang.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_LIB%\\FortranRuntime.lib exit 1"
     ]
    }
   },
   {
    "name": "flang",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "clangdev ==19.1.7",
      "compiler-rt ==19.1.7",
      "llvmdev ==19.1.7",
      "mlir ==19.1.7",
      "llvm ==19.1.7",
      "libclang-cpp ==19.1.7",
      "zlib",
      "zstd",
      "libflang"
     ],
     "run": [
      "clang ==19.1.7",
      "compiler-rt ==19.1.7",
      "libflang"
     ]
    },
    "run_exports": {
     "strong": [
      "libflang >=19.1.7"
     ]
    },
    "script": "install_flang.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\flang-new.exe exit 1"
     ]
    }
   }
  ],
  "package": {
   "name": "flang-split",
   "version": "19.1.7"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "numpy *"
   ],
   "host": [
    "clangdev ==19.1.7",
    "compiler-rt ==19.1.7",
    "lit ==19.1.7",
    "llvmdev ==19.1.7",
    "mlir ==19.1.7",
    "zlib"
   ]
  },
  "schema_version": 0,
  "source": {
   "sha256": "59abea1c22e64933fad4de1671a61cdb934098793c7a31b333ff58dc41bff36c",
   "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-19.1.7.tar.gz"
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "numpy"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clangdev",
    "compiler-rt",
    "libclang-cpp",
    "libflang",
    "lit",
    "llvm",
    "llvmdev",
    "mlir",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "clang",
    "compiler-rt",
    "libflang"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}