{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "error_overlinking": true
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "metatensor",
 "linux_64_meta_yaml": {
  "about": {
   "doc_url": "https://lab-cosmo.github.io/metatensor/",
   "home": "https://github.com/lab-cosmo/metatensor",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": [
    "LICENSE"
   ],
   "summary": "Self-describing sparse tensor data format for atomistic machine learning and beyond"
  },
  "build": {
   "noarch": "generic",
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "Luthaf",
    "PicoCentauri"
   ]
  },
  "package": {
   "name": "metatensor",
   "version": "0.2"
  },
  "requirements": {
   "run": [
    "libmetatensor",
    "libmetatensor-torch"
   ]
  },
  "schema_version": 0,
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libmetatensor$SHLIB_EXT",
    "test -f $PREFIX/lib/libmetatensor_torch$SHLIB_EXT"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "libmetatensor",
    "libmetatensor-torch"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "doc_url": "https://lab-cosmo.github.io/metatensor/",
   "home": "https://github.com/lab-cosmo/metatensor",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": [
    "LICENSE"
   ],
   "summary": "Self-describing sparse tensor data format for atomistic machine learning and beyond"
  },
  "build": {
   "noarch": "generic",
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "Luthaf",
    "PicoCentauri"
   ]
  },
  "package": {
   "name": "metatensor",
   "version": "0.2"
  },
  "requirements": {
   "run": [
    "libmetatensor",
    "libmetatensor-torch"
   ]
  },
  "schema_version": 0,
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libmetatensor$SHLIB_EXT",
    "test -f $PREFIX/lib/libmetatensor_torch$SHLIB_EXT"
   ]
  }
 },
 "name": "metatensor",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "metatensor"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/metatensor.json"
 },
 "raw_meta_yaml": "package:\n  name: metatensor\n  version: 0.2\n\nbuild:\n  number: 0\n  noarch: generic\n\nrequirements:\n  run:\n    - libmetatensor\n    - libmetatensor-torch\n\ntest:\n  commands:\n    # check if libmetatensor files exists\n    - test -f $PREFIX/lib/libmetatensor$SHLIB_EXT  # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\bin\\\\metatensor.dll exit 1  # [win]\n    # check if libmetatensor-torch files exists\n    - test -f $PREFIX/lib/libmetatensor_torch$SHLIB_EXT  # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\bin\\\\metatensor_torch.dll exit 1  # [win]\n\nabout:\n  home: https://github.com/lab-cosmo/metatensor\n  summary: 'Self-describing sparse tensor data format for atomistic machine learning and beyond'\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file:\n    - LICENSE\n  doc_url: https://lab-cosmo.github.io/metatensor/\n\nextra:\n  recipe-maintainers:\n    - Luthaf\n    - PicoCentauri\n",
 "req": {
  "__set__": true,
  "elements": [
   "libmetatensor",
   "libmetatensor-torch"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "libmetatensor",
    "libmetatensor-torch"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "libmetatensor",
    "libmetatensor-torch"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "version": "0.2",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/metatensor.json"
 }
}