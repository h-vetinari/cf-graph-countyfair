{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "error_overlinking": true
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "freva-rest-server",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Freva (Free Evaluation System Framework) is a comprehensive platform\ndesigned to support researchers, especially in the atmospheric and climate\nscience communities, in managing, searching, and analyzing large-scale\ndatasets. It bridges the gap between data centers and user-defined tools,\npromoting efficient, reproducible, and collaborative research workflows.\n\nIntended Audience\n------------------\n\nFreva is ideal for:\n\n- **Researchers and Scientists**: Streamline the search and evaluation of\n  datasets hosted at various data centers.\n- **Data Analysts**: Integrate user-defined tools into a unified analysis\n  framework.\n- **System Administrators**: Deploy scalable, reliable services to support\n  data-heavy research.\n- **Research Institutions**: Enable reproducible data analysis workflows\n  and foster collaboration among scientists.\n\nWhether you are analyzing climate model output, satellite observations, or\nobservational data, Freva simplifies your workflow with its intuitive\ninterface and robust backend services.\n\nCore Features\n-------------\n\n- **Data Discovery**: Quickly and intuitively search large datasets across\n  distributed data centers.\n- **Tool Integration**: A unified interface to register, manage, and\n  execute user-defined analysis tools.\n- **Reproducibility**: Apply tools in a consistent and reproducible manner,\n  with a focus on scientific rigor.\n- **Extensibility**: Customize and expand the platform to meet the unique\n  needs of your research team.\n\nSetup\n-----\n\nSetting up Freva involves deploying the necessary services and configuring\nthem for your environment. Below is a high-level overview:\n\nPrerequisites\n~~~~~~~~~~~~~\n\n   - A Linux-based system with administrative privileges.\n   - Conda installed to manage dependencies.\n   - Access to required systemd services like Apache Solr and MongoDB.\n\nInstallation\n~~~~~~~~~~~~\n\n  1. Install Freva using the Conda package manager:\n\n     `conda create -n freva-nextgen -c conda-forge freva-nextgen`\n     `conda activate freva-nextgen`\n\n\n  2. The system requires various background services. These can be found in:\n\n    `$CONDA_PREFIX/share/systemd/<SERVICE>.service`\n\n\n   3. Enable and start the services as follows:\n\n     `cp $CONDA_PREFIX/share/systemd/solr.service /etc/systemd/system`\n     `sudo systemctl daemon-reload`\n     `sudo systemctl enable solr`\n     `sudo systemctl start solr`\n\n\n     Modify the configuration file\n     (`$CONDA_PREFIX/share/freva-rest-server/config.ini`) to adjust the\n     restAPI and service settings.\n\n     If you prefer to use systemd services at the **user level**\n     (e.g., in `~/.local/share/systemd/user/`),\n     ensure that **systemd lingering** is enabled for the user.\n\n   4. You can enable lingering with the following command:\n\n    `sudo loginctl enable-linger <USER-NAME>`\n\n   This allows user-level services to continue running after the user logs\n   out.\n\n\nRunning the Freva REST Server\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  1.  Start the REST server using:\n\n    `freva-rest-server`\n\n    This command launches the API endpoints that power Freva\u2019s services,\n    enabling you to interact with data and tools seamlessly.\n\nWhy Choose Freva?\n-----------------\n\nFreva is designed for:\n\n- Seamless access to multi-terabyte datasets stored at data centers.\n- A scalable, modular architecture that adapts to diverse research needs.\n- An emphasis on fostering collaboration through reproducibility and\n  interoperability.\n",
   "dev_url": "ttps://github.com/FREVA-CLINT/freva-nextgen",
   "doc_source_url": "https://github.com/FREVA-CLINT/freva-nextgen/blob/main/freva-rest/README.md",
   "doc_url": "https://freva-clint.github.io/freva-nextgen",
   "home": "https://github.com/FREVA-CLINT/freva-nextgen",
   "keywords": [
    "freva",
    "REST-API",
    "data framework"
   ],
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Server for the Free Evaluation and Analysis Framework (Freva)",
   "tags": [
    "data-analysis",
    "REST-API",
    "climate-research"
   ]
  },
  "build": {
   "noarch": "python",
   "number": "8"
  },
  "extra": {
   "recipe-maintainers": [
    "antarcticrainforest"
   ]
  },
  "package": {
   "name": "freva-rest-server",
   "version": "2411.0.0"
  },
  "requirements": {
   "host": [
    "python 3.9",
    "setuptools",
    "pip"
   ],
   "run": [
    "python >=3.9",
    "aiohttp",
    "apache-solr",
    "email-validator",
    "fastapi",
    "fastapi-third-party-auth",
    "lsof",
    "mongodb",
    "motor >=3.6",
    "mysql-server",
    "pyjwt",
    "pymongo >=4.9",
    "python-dotenv",
    "python-dateutil",
    "python-multipart",
    "redis-py",
    "redis-server",
    "requests",
    "rich",
    "rich-argparse",
    "setuptools",
    "tomli",
    "typing_extensions",
    "uvicorn",
    "zarr"
   ]
  },
  "schema_version": 0,
  "source": [
   {
    "sha256": "7227d57d637e67c1204e00e9e2aae6f4169a0df1e004c01f0e58172a354f3e9a",
    "url": "https://github.com/FREVA-CLINT/freva-nextgen/archive/refs/tags/v2411.0.0.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "freva-rest-server --help"
   ],
   "imports": [
    "freva_rest"
   ],
   "requires": [
    "python 3.9",
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiohttp",
    "apache-solr",
    "email-validator",
    "fastapi",
    "fastapi-third-party-auth",
    "lsof",
    "mongodb",
    "motor",
    "mysql-server",
    "pyjwt",
    "pymongo",
    "python",
    "python-dateutil",
    "python-dotenv",
    "python-multipart",
    "redis-py",
    "redis-server",
    "requests",
    "rich",
    "rich-argparse",
    "setuptools",
    "tomli",
    "typing_extensions",
    "uvicorn",
    "zarr"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Freva (Free Evaluation System Framework) is a comprehensive platform\ndesigned to support researchers, especially in the atmospheric and climate\nscience communities, in managing, searching, and analyzing large-scale\ndatasets. It bridges the gap between data centers and user-defined tools,\npromoting efficient, reproducible, and collaborative research workflows.\n\nIntended Audience\n------------------\n\nFreva is ideal for:\n\n- **Researchers and Scientists**: Streamline the search and evaluation of\n  datasets hosted at various data centers.\n- **Data Analysts**: Integrate user-defined tools into a unified analysis\n  framework.\n- **System Administrators**: Deploy scalable, reliable services to support\n  data-heavy research.\n- **Research Institutions**: Enable reproducible data analysis workflows\n  and foster collaboration among scientists.\n\nWhether you are analyzing climate model output, satellite observations, or\nobservational data, Freva simplifies your workflow with its intuitive\ninterface and robust backend services.\n\nCore Features\n-------------\n\n- **Data Discovery**: Quickly and intuitively search large datasets across\n  distributed data centers.\n- **Tool Integration**: A unified interface to register, manage, and\n  execute user-defined analysis tools.\n- **Reproducibility**: Apply tools in a consistent and reproducible manner,\n  with a focus on scientific rigor.\n- **Extensibility**: Customize and expand the platform to meet the unique\n  needs of your research team.\n\nSetup\n-----\n\nSetting up Freva involves deploying the necessary services and configuring\nthem for your environment. Below is a high-level overview:\n\nPrerequisites\n~~~~~~~~~~~~~\n\n   - A Linux-based system with administrative privileges.\n   - Conda installed to manage dependencies.\n   - Access to required systemd services like Apache Solr and MongoDB.\n\nInstallation\n~~~~~~~~~~~~\n\n  1. Install Freva using the Conda package manager:\n\n     `conda create -n freva-nextgen -c conda-forge freva-nextgen`\n     `conda activate freva-nextgen`\n\n\n  2. The system requires various background services. These can be found in:\n\n    `$CONDA_PREFIX/share/systemd/<SERVICE>.service`\n\n\n   3. Enable and start the services as follows:\n\n     `cp $CONDA_PREFIX/share/systemd/solr.service /etc/systemd/system`\n     `sudo systemctl daemon-reload`\n     `sudo systemctl enable solr`\n     `sudo systemctl start solr`\n\n\n     Modify the configuration file\n     (`$CONDA_PREFIX/share/freva-rest-server/config.ini`) to adjust the\n     restAPI and service settings.\n\n     If you prefer to use systemd services at the **user level**\n     (e.g., in `~/.local/share/systemd/user/`),\n     ensure that **systemd lingering** is enabled for the user.\n\n   4. You can enable lingering with the following command:\n\n    `sudo loginctl enable-linger <USER-NAME>`\n\n   This allows user-level services to continue running after the user logs\n   out.\n\n\nRunning the Freva REST Server\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  1.  Start the REST server using:\n\n    `freva-rest-server`\n\n    This command launches the API endpoints that power Freva\u2019s services,\n    enabling you to interact with data and tools seamlessly.\n\nWhy Choose Freva?\n-----------------\n\nFreva is designed for:\n\n- Seamless access to multi-terabyte datasets stored at data centers.\n- A scalable, modular architecture that adapts to diverse research needs.\n- An emphasis on fostering collaboration through reproducibility and\n  interoperability.\n",
   "dev_url": "ttps://github.com/FREVA-CLINT/freva-nextgen",
   "doc_source_url": "https://github.com/FREVA-CLINT/freva-nextgen/blob/main/freva-rest/README.md",
   "doc_url": "https://freva-clint.github.io/freva-nextgen",
   "home": "https://github.com/FREVA-CLINT/freva-nextgen",
   "keywords": [
    "freva",
    "REST-API",
    "data framework"
   ],
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Server for the Free Evaluation and Analysis Framework (Freva)",
   "tags": [
    "data-analysis",
    "REST-API",
    "climate-research"
   ]
  },
  "build": {
   "noarch": "python",
   "number": "8"
  },
  "extra": {
   "recipe-maintainers": [
    "antarcticrainforest"
   ]
  },
  "package": {
   "name": "freva-rest-server",
   "version": "2411.0.0"
  },
  "requirements": {
   "host": [
    "python 3.9",
    "setuptools",
    "pip"
   ],
   "run": [
    "python >=3.9",
    "aiohttp",
    "apache-solr",
    "email-validator",
    "fastapi",
    "fastapi-third-party-auth",
    "lsof",
    "mongodb",
    "motor >=3.6",
    "mysql-server",
    "pyjwt",
    "pymongo >=4.9",
    "python-dotenv",
    "python-dateutil",
    "python-multipart",
    "redis-py",
    "redis-server",
    "requests",
    "rich",
    "rich-argparse",
    "setuptools",
    "tomli",
    "typing_extensions",
    "uvicorn",
    "zarr"
   ]
  },
  "schema_version": 0,
  "source": [
   {
    "sha256": "7227d57d637e67c1204e00e9e2aae6f4169a0df1e004c01f0e58172a354f3e9a",
    "url": "https://github.com/FREVA-CLINT/freva-nextgen/archive/refs/tags/v2411.0.0.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "freva-rest-server --help"
   ],
   "imports": [
    "freva_rest"
   ],
   "requires": [
    "python 3.9",
    "pip"
   ]
  }
 },
 "name": "freva-rest-server",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "freva-rest-server"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/freva-rest-server.json"
 },
 "raw_meta_yaml": "{% set name = \"freva-rest-server\" %}\n{% set version = \"2411.0.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/FREVA-CLINT/freva-nextgen/archive/refs/tags/v{{ version }}.tar.gz\n    sha256: 7227d57d637e67c1204e00e9e2aae6f4169a0df1e004c01f0e58172a354f3e9a\n\nbuild:\n  number: 8\n  noarch: python\n\n\nrequirements:\n  host:\n    - python {{ python_min }}\n    - setuptools\n    - pip\n\n  run:\n    - python >={{ python_min }}\n    - aiohttp\n    - apache-solr\n    - email-validator\n    - fastapi\n    - fastapi-third-party-auth\n    - lsof\n    - mongodb\n    - motor >=3.6\n    - mysql-server\n    - pyjwt\n    - pymongo >=4.9\n    - python-dotenv\n    - python-dateutil\n    - python-multipart\n    - redis-py\n    - redis-server\n    - requests\n    - rich\n    - rich-argparse\n    - setuptools\n    - tomli\n    - typing_extensions\n    - uvicorn\n    - zarr\n\ntest:\n  imports:\n    - freva_rest\n  commands:\n    - freva-rest-server --help\n  requires:\n    - python {{ python_min }}\n    - pip\n\nabout:\n  summary: Server for the Free Evaluation and Analysis Framework (Freva)\n  home: https://github.com/FREVA-CLINT/freva-nextgen\n  description: |\n    Freva (Free Evaluation System Framework) is a comprehensive platform\n    designed to support researchers, especially in the atmospheric and climate\n    science communities, in managing, searching, and analyzing large-scale\n    datasets. It bridges the gap between data centers and user-defined tools,\n    promoting efficient, reproducible, and collaborative research workflows.\n\n    Intended Audience\n    ------------------\n\n    Freva is ideal for:\n\n    - **Researchers and Scientists**: Streamline the search and evaluation of\n      datasets hosted at various data centers.\n    - **Data Analysts**: Integrate user-defined tools into a unified analysis\n      framework.\n    - **System Administrators**: Deploy scalable, reliable services to support\n      data-heavy research.\n    - **Research Institutions**: Enable reproducible data analysis workflows\n      and foster collaboration among scientists.\n\n    Whether you are analyzing climate model output, satellite observations, or\n    observational data, Freva simplifies your workflow with its intuitive\n    interface and robust backend services.\n\n    Core Features\n    -------------\n\n    - **Data Discovery**: Quickly and intuitively search large datasets across\n      distributed data centers.\n    - **Tool Integration**: A unified interface to register, manage, and\n      execute user-defined analysis tools.\n    - **Reproducibility**: Apply tools in a consistent and reproducible manner,\n      with a focus on scientific rigor.\n    - **Extensibility**: Customize and expand the platform to meet the unique\n      needs of your research team.\n\n    Setup\n    -----\n\n    Setting up Freva involves deploying the necessary services and configuring\n    them for your environment. Below is a high-level overview:\n\n    Prerequisites\n    ~~~~~~~~~~~~~\n\n       - A Linux-based system with administrative privileges.\n       - Conda installed to manage dependencies.\n       - Access to required systemd services like Apache Solr and MongoDB.\n\n    Installation\n    ~~~~~~~~~~~~\n\n      1. Install Freva using the Conda package manager:\n\n         `conda create -n freva-nextgen -c conda-forge freva-nextgen`\n         `conda activate freva-nextgen`\n\n\n      2. The system requires various background services. These can be found in:\n\n        `$CONDA_PREFIX/share/systemd/<SERVICE>.service`\n\n\n       3. Enable and start the services as follows:\n\n         `cp $CONDA_PREFIX/share/systemd/solr.service /etc/systemd/system`\n         `sudo systemctl daemon-reload`\n         `sudo systemctl enable solr`\n         `sudo systemctl start solr`\n\n\n         Modify the configuration file\n         (`$CONDA_PREFIX/share/freva-rest-server/config.ini`) to adjust the\n         restAPI and service settings.\n\n         If you prefer to use systemd services at the **user level**\n         (e.g., in `~/.local/share/systemd/user/`),\n         ensure that **systemd lingering** is enabled for the user.\n\n       4. You can enable lingering with the following command:\n\n        `sudo loginctl enable-linger <USER-NAME>`\n\n       This allows user-level services to continue running after the user logs\n       out.\n\n\n    Running the Freva REST Server\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n      1.  Start the REST server using:\n\n        `freva-rest-server`\n\n        This command launches the API endpoints that power Freva\u2019s services,\n        enabling you to interact with data and tools seamlessly.\n\n    Why Choose Freva?\n    -----------------\n\n    Freva is designed for:\n\n    - Seamless access to multi-terabyte datasets stored at data centers.\n    - A scalable, modular architecture that adapts to diverse research needs.\n    - An emphasis on fostering collaboration through reproducibility and\n      interoperability.\n\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  doc_url: https://freva-clint.github.io/freva-nextgen\n  dev_url: ttps://github.com/FREVA-CLINT/freva-nextgen\n  doc_source_url: https://github.com/FREVA-CLINT/freva-nextgen/blob/main/freva-rest/README.md\n  tags:\n    - data-analysis\n    - REST-API\n    - climate-research\n  keywords:\n    - freva\n    - REST-API\n    - data framework\n\n\n\nextra:\n  recipe-maintainers:\n    - antarcticrainforest\n",
 "req": {
  "__set__": true,
  "elements": [
   "aiohttp",
   "apache-solr",
   "email-validator",
   "fastapi",
   "fastapi-third-party-auth",
   "lsof",
   "mongodb",
   "motor",
   "mysql-server",
   "pip",
   "pyjwt",
   "pymongo",
   "python",
   "python-dateutil",
   "python-dotenv",
   "python-multipart",
   "redis-py",
   "redis-server",
   "requests",
   "rich",
   "rich-argparse",
   "setuptools",
   "tomli",
   "typing_extensions",
   "uvicorn",
   "zarr"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiohttp",
    "apache-solr",
    "email-validator",
    "fastapi",
    "fastapi-third-party-auth",
    "lsof",
    "mongodb",
    "motor",
    "mysql-server",
    "pyjwt",
    "pymongo",
    "python",
    "python-dateutil",
    "python-dotenv",
    "python-multipart",
    "redis-py",
    "redis-server",
    "requests",
    "rich",
    "rich-argparse",
    "setuptools",
    "tomli",
    "typing_extensions",
    "uvicorn",
    "zarr"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python 3.9",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiohttp",
    "apache-solr",
    "email-validator",
    "fastapi",
    "fastapi-third-party-auth",
    "lsof",
    "mongodb",
    "motor >=3.6",
    "mysql-server",
    "pyjwt",
    "pymongo >=4.9",
    "python >=3.9",
    "python-dateutil",
    "python-dotenv",
    "python-multipart",
    "redis-py",
    "redis-server",
    "requests",
    "rich",
    "rich-argparse",
    "setuptools",
    "tomli",
    "typing_extensions",
    "uvicorn",
    "zarr"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "python 3.9"
   ]
  }
 },
 "url": "https://github.com/FREVA-CLINT/freva-nextgen/archive/refs/tags/v2411.0.0.tar.gz",
 "version": "2411.0.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/freva-rest-server.json"
 }
}