{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "azure": {
   "free_disk_space": true
  },
  "build_platform": {
   "linux_aarch64": "linux_64"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_build_tool": "rattler-build",
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "triton",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "This is the development repository of Triton, a language and compiler for writing highly efficient custom Deep-Learning primitives.\nThe aim of Triton is to provide an open-source environment to write fast code at higher productivity than CUDA, but also with higher flexibility than other existing DSLs.",
   "dev_url": "https://github.com/triton-lang/triton",
   "doc_url": "https://triton-lang.org/",
   "home": "https://github.com/triton-lang/triton",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Development repository for the Triton language and compiler"
  },
  "build": {
   "number": "5"
  },
  "extra": {
   "recipe-maintainers": [
    "erip",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": null,
    "name": "triton",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "c_stdlib_stub",
      "ninja",
      "cmake",
      "mlir",
      "sed"
     ],
     "host": [
      "python",
      "pybind11",
      "pip",
      "setuptools",
      "llvm",
      "llvmdev",
      "mlir",
      "zlib",
      "nlohmann_json",
      "cuda-cupti-dev"
     ],
     "run": [
      "python",
      "setuptools",
      "cuda-nvcc",
      "cuda-cuobjdump",
      "cuda-cudart",
      "cuda-cupti"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "triton",
        "triton._C.libtriton"
       ]
      }
     },
     {
      "files": {
       "source": [
        "python/test/**"
       ]
      },
      "requirements": {
       "run": [
        "pip",
        "pytest",
        "scipy"
       ]
      },
      "script": "pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_ptx"
     }
    ]
   },
   {
    "build": null,
    "name": "triton",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "c_stdlib_stub",
      "ninja",
      "cmake",
      "mlir",
      "sed"
     ],
     "host": [
      "python",
      "pybind11",
      "pip",
      "setuptools",
      "llvm",
      "llvmdev",
      "mlir",
      "zlib",
      "nlohmann_json",
      "cuda-cupti-dev"
     ],
     "run": [
      "python",
      "setuptools",
      "cuda-nvcc",
      "cuda-cuobjdump",
      "cuda-cudart",
      "cuda-cupti"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "triton",
        "triton._C.libtriton"
       ]
      }
     },
     {
      "files": {
       "source": [
        "python/test/**"
       ]
      },
      "requirements": {
       "run": [
        "pip",
        "pytest",
        "scipy"
       ]
      },
      "script": "pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_ptx"
     }
    ]
   },
   {
    "build": null,
    "name": "triton",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "c_stdlib_stub",
      "ninja",
      "cmake",
      "mlir",
      "sed"
     ],
     "host": [
      "python",
      "pybind11",
      "pip",
      "setuptools",
      "llvm",
      "llvmdev",
      "mlir",
      "zlib",
      "nlohmann_json",
      "cuda-cupti-dev"
     ],
     "run": [
      "python",
      "setuptools",
      "cuda-nvcc",
      "cuda-cuobjdump",
      "cuda-cudart",
      "cuda-cupti"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "triton",
        "triton._C.libtriton"
       ]
      }
     },
     {
      "files": {
       "source": [
        "python/test/**"
       ]
      },
      "requirements": {
       "run": [
        "pip",
        "pytest",
        "scipy"
       ]
      },
      "script": "pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_ptx"
     }
    ]
   },
   {
    "build": null,
    "name": "triton",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "c_stdlib_stub",
      "ninja",
      "cmake",
      "mlir",
      "sed"
     ],
     "host": [
      "python",
      "pybind11",
      "pip",
      "setuptools",
      "llvm",
      "llvmdev",
      "mlir",
      "zlib",
      "nlohmann_json",
      "cuda-cupti-dev"
     ],
     "run": [
      "python",
      "setuptools",
      "cuda-nvcc",
      "cuda-cuobjdump",
      "cuda-cudart",
      "cuda-cupti"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "triton",
        "triton._C.libtriton"
       ]
      }
     },
     {
      "files": {
       "source": [
        "python/test/**"
       ]
      },
      "requirements": {
       "run": [
        "pip",
        "pytest",
        "scipy"
       ]
      },
      "script": "pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_ptx"
     }
    ]
   },
   {
    "build": null,
    "name": "triton",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "c_stdlib_stub",
      "ninja",
      "cmake",
      "mlir",
      "sed"
     ],
     "host": [
      "python",
      "pybind11",
      "pip",
      "setuptools",
      "llvm",
      "llvmdev",
      "mlir",
      "zlib",
      "nlohmann_json",
      "cuda-cupti-dev"
     ],
     "run": [
      "python",
      "setuptools",
      "cuda-nvcc",
      "cuda-cuobjdump",
      "cuda-cudart",
      "cuda-cupti"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "triton",
        "triton._C.libtriton"
       ]
      }
     },
     {
      "files": {
       "source": [
        "python/test/**"
       ]
      },
      "requirements": {
       "run": [
        "pip",
        "pytest",
        "scipy"
       ]
      },
      "script": "pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_ptx"
     }
    ]
   }
  ],
  "package": {
   "name": "triton",
   "version": "3.1.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_stdlib_stub",
    "ninja",
    "cmake",
    "mlir",
    "sed"
   ],
   "host": [
    "python",
    "pybind11",
    "pip",
    "setuptools",
    "llvm",
    "llvmdev",
    "mlir",
    "zlib",
    "nlohmann_json",
    "cuda-cupti-dev"
   ],
   "run": [
    "python",
    "setuptools",
    "cuda-nvcc",
    "cuda-cuobjdump",
    "cuda-cudart",
    "cuda-cupti"
   ]
  },
  "schema_version": 1,
  "source": {
   "patches": [
    "patches/0001-Remove-Werror-that-cause-false-positive-build-failur.patch",
    "patches/0002-BACKEND-Update-LLVM-version-to-https-github.com-llvm.patch",
    "patches/0003-BACKEND-Update-LLVM-version-to-https-github.com-llvm.patch",
    "patches/0004-BACKEND-Update-LLVM-to-llvm-llvm-project-657ec7320d8.patch",
    "patches/0005-BACKEND-Update-LLVM-version-to-https-github.com-llvm.patch",
    "patches/0006-BACKEND-Update-LLVM-version-to-https-github.com-llvm.patch",
    "patches/0007-Update-config.enableRegionSimplification-for-LLVM-19.patch",
    "patches/0008-Do-not-link-directly-to-LLVM-static-libraries.patch",
    "patches/0009-CODEGEN-Support-CUDA-12.6-4588.patch",
    "patches/0010-Use-system-PATH-to-find-tools-in-CONDA_PREFIX.patch",
    "patches/0011-Don-t-specify-A-x64-option-and-reuse-cmake-build-typ.patch",
    "patches/0012-remove-unused-requirement-filelock-4356.patch",
    "patches/0013-Add-conda-forge-include-dirs-to-list-of-include-dirs.patch"
   ],
   "sha256": "933babc32b69872efbce05fe8be61129fecf52c724fadea42d8c7b2d10e16ad9",
   "url": "https://github.com/triton-lang/triton/archive/5fe38ffd73c2ac6ed6323b554205186696631c6f.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_stdlib_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "mlir",
    "ninja",
    "sed"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-cupti-dev",
    "llvm",
    "llvmdev",
    "mlir",
    "nlohmann_json",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cuda-cudart",
    "cuda-cuobjdump",
    "cuda-cupti",
    "cuda-nvcc",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest",
    "scipy"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "This is the development repository of Triton, a language and compiler for writing highly efficient custom Deep-Learning primitives.\nThe aim of Triton is to provide an open-source environment to write fast code at higher productivity than CUDA, but also with higher flexibility than other existing DSLs.",
   "dev_url": "https://github.com/triton-lang/triton",
   "doc_url": "https://triton-lang.org/",
   "home": "https://github.com/triton-lang/triton",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Development repository for the Triton language and compiler"
  },
  "build": {
   "number": "5"
  },
  "extra": {
   "recipe-maintainers": [
    "erip",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": null,
    "name": "triton",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "c_stdlib_stub",
      "ninja",
      "cmake",
      "mlir",
      "sed",
      "python",
      "cross-python_linux-64"
     ],
     "host": [
      "python",
      "pybind11",
      "pip",
      "setuptools",
      "llvm",
      "llvmdev",
      "mlir",
      "zlib",
      "nlohmann_json",
      "cuda-cupti-dev"
     ],
     "run": [
      "python",
      "setuptools",
      "cuda-nvcc",
      "cuda-cuobjdump",
      "cuda-cudart",
      "cuda-cupti"
     ]
    },
    "tests": []
   },
   {
    "build": null,
    "name": "triton",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "c_stdlib_stub",
      "ninja",
      "cmake",
      "mlir",
      "sed",
      "python",
      "cross-python_linux-64"
     ],
     "host": [
      "python",
      "pybind11",
      "pip",
      "setuptools",
      "llvm",
      "llvmdev",
      "mlir",
      "zlib",
      "nlohmann_json",
      "cuda-cupti-dev"
     ],
     "run": [
      "python",
      "setuptools",
      "cuda-nvcc",
      "cuda-cuobjdump",
      "cuda-cudart",
      "cuda-cupti"
     ]
    },
    "tests": []
   },
   {
    "build": null,
    "name": "triton",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "c_stdlib_stub",
      "ninja",
      "cmake",
      "mlir",
      "sed",
      "python",
      "cross-python_linux-64"
     ],
     "host": [
      "python",
      "pybind11",
      "pip",
      "setuptools",
      "llvm",
      "llvmdev",
      "mlir",
      "zlib",
      "nlohmann_json",
      "cuda-cupti-dev"
     ],
     "run": [
      "python",
      "setuptools",
      "cuda-nvcc",
      "cuda-cuobjdump",
      "cuda-cudart",
      "cuda-cupti"
     ]
    },
    "tests": []
   },
   {
    "build": null,
    "name": "triton",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "c_stdlib_stub",
      "ninja",
      "cmake",
      "mlir",
      "sed",
      "python",
      "cross-python_linux-64"
     ],
     "host": [
      "python",
      "pybind11",
      "pip",
      "setuptools",
      "llvm",
      "llvmdev",
      "mlir",
      "zlib",
      "nlohmann_json",
      "cuda-cupti-dev"
     ],
     "run": [
      "python",
      "setuptools",
      "cuda-nvcc",
      "cuda-cuobjdump",
      "cuda-cudart",
      "cuda-cupti"
     ]
    },
    "tests": []
   },
   {
    "build": null,
    "name": "triton",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "c_stdlib_stub",
      "ninja",
      "cmake",
      "mlir",
      "sed",
      "python",
      "cross-python_linux-64"
     ],
     "host": [
      "python",
      "pybind11",
      "pip",
      "setuptools",
      "llvm",
      "llvmdev",
      "mlir",
      "zlib",
      "nlohmann_json",
      "cuda-cupti-dev"
     ],
     "run": [
      "python",
      "setuptools",
      "cuda-nvcc",
      "cuda-cuobjdump",
      "cuda-cudart",
      "cuda-cupti"
     ]
    },
    "tests": []
   }
  ],
  "package": {
   "name": "triton",
   "version": "3.1.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_stdlib_stub",
    "ninja",
    "cmake",
    "mlir",
    "sed",
    "python",
    "cross-python_linux-64"
   ],
   "host": [
    "python",
    "pybind11",
    "pip",
    "setuptools",
    "llvm",
    "llvmdev",
    "mlir",
    "zlib",
    "nlohmann_json",
    "cuda-cupti-dev"
   ],
   "run": [
    "python",
    "setuptools",
    "cuda-nvcc",
    "cuda-cuobjdump",
    "cuda-cudart",
    "cuda-cupti"
   ]
  },
  "schema_version": 1,
  "source": {
   "patches": [
    "patches/0001-Remove-Werror-that-cause-false-positive-build-failur.patch",
    "patches/0002-BACKEND-Update-LLVM-version-to-https-github.com-llvm.patch",
    "patches/0003-BACKEND-Update-LLVM-version-to-https-github.com-llvm.patch",
    "patches/0004-BACKEND-Update-LLVM-to-llvm-llvm-project-657ec7320d8.patch",
    "patches/0005-BACKEND-Update-LLVM-version-to-https-github.com-llvm.patch",
    "patches/0006-BACKEND-Update-LLVM-version-to-https-github.com-llvm.patch",
    "patches/0007-Update-config.enableRegionSimplification-for-LLVM-19.patch",
    "patches/0008-Do-not-link-directly-to-LLVM-static-libraries.patch",
    "patches/0009-CODEGEN-Support-CUDA-12.6-4588.patch",
    "patches/0010-Use-system-PATH-to-find-tools-in-CONDA_PREFIX.patch",
    "patches/0011-Don-t-specify-A-x64-option-and-reuse-cmake-build-typ.patch",
    "patches/0012-remove-unused-requirement-filelock-4356.patch",
    "patches/0013-Add-conda-forge-include-dirs-to-list-of-include-dirs.patch"
   ],
   "sha256": "933babc32b69872efbce05fe8be61129fecf52c724fadea42d8c7b2d10e16ad9",
   "url": "https://github.com/triton-lang/triton/archive/5fe38ffd73c2ac6ed6323b554205186696631c6f.tar.gz"
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_stdlib_stub",
    "cmake",
    "cross-python_linux-64",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "mlir",
    "ninja",
    "python",
    "sed"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-cupti-dev",
    "llvm",
    "llvmdev",
    "mlir",
    "nlohmann_json",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cuda-cudart",
    "cuda-cuobjdump",
    "cuda-cupti",
    "cuda-nvcc",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "This is the development repository of Triton, a language and compiler for writing highly efficient custom Deep-Learning primitives.\nThe aim of Triton is to provide an open-source environment to write fast code at higher productivity than CUDA, but also with higher flexibility than other existing DSLs.",
   "dev_url": "https://github.com/triton-lang/triton",
   "doc_url": "https://triton-lang.org/",
   "home": "https://github.com/triton-lang/triton",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Development repository for the Triton language and compiler"
  },
  "build": {
   "number": "5"
  },
  "extra": {
   "recipe-maintainers": [
    "erip",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": null,
    "name": "triton",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "c_stdlib_stub",
      "ninja",
      "cmake",
      "mlir",
      "sed"
     ],
     "host": [
      "python",
      "pybind11",
      "pip",
      "setuptools",
      "llvm",
      "llvmdev",
      "mlir",
      "zlib",
      "nlohmann_json",
      "cuda-cupti-dev"
     ],
     "run": [
      "python",
      "setuptools",
      "cuda-nvcc",
      "cuda-cuobjdump",
      "cuda-cudart",
      "cuda-cupti"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "triton",
        "triton._C.libtriton"
       ]
      }
     },
     {
      "files": {
       "source": [
        "python/test/**"
       ]
      },
      "requirements": {
       "run": [
        "pip",
        "pytest",
        "scipy"
       ]
      },
      "script": "pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_ptx"
     }
    ]
   },
   {
    "build": null,
    "name": "triton",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "c_stdlib_stub",
      "ninja",
      "cmake",
      "mlir",
      "sed"
     ],
     "host": [
      "python",
      "pybind11",
      "pip",
      "setuptools",
      "llvm",
      "llvmdev",
      "mlir",
      "zlib",
      "nlohmann_json",
      "cuda-cupti-dev"
     ],
     "run": [
      "python",
      "setuptools",
      "cuda-nvcc",
      "cuda-cuobjdump",
      "cuda-cudart",
      "cuda-cupti"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "triton",
        "triton._C.libtriton"
       ]
      }
     },
     {
      "files": {
       "source": [
        "python/test/**"
       ]
      },
      "requirements": {
       "run": [
        "pip",
        "pytest",
        "scipy"
       ]
      },
      "script": "pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_ptx"
     }
    ]
   },
   {
    "build": null,
    "name": "triton",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "c_stdlib_stub",
      "ninja",
      "cmake",
      "mlir",
      "sed"
     ],
     "host": [
      "python",
      "pybind11",
      "pip",
      "setuptools",
      "llvm",
      "llvmdev",
      "mlir",
      "zlib",
      "nlohmann_json",
      "cuda-cupti-dev"
     ],
     "run": [
      "python",
      "setuptools",
      "cuda-nvcc",
      "cuda-cuobjdump",
      "cuda-cudart",
      "cuda-cupti"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "triton",
        "triton._C.libtriton"
       ]
      }
     },
     {
      "files": {
       "source": [
        "python/test/**"
       ]
      },
      "requirements": {
       "run": [
        "pip",
        "pytest",
        "scipy"
       ]
      },
      "script": "pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_ptx"
     }
    ]
   },
   {
    "build": null,
    "name": "triton",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "c_stdlib_stub",
      "ninja",
      "cmake",
      "mlir",
      "sed"
     ],
     "host": [
      "python",
      "pybind11",
      "pip",
      "setuptools",
      "llvm",
      "llvmdev",
      "mlir",
      "zlib",
      "nlohmann_json",
      "cuda-cupti-dev"
     ],
     "run": [
      "python",
      "setuptools",
      "cuda-nvcc",
      "cuda-cuobjdump",
      "cuda-cudart",
      "cuda-cupti"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "triton",
        "triton._C.libtriton"
       ]
      }
     },
     {
      "files": {
       "source": [
        "python/test/**"
       ]
      },
      "requirements": {
       "run": [
        "pip",
        "pytest",
        "scipy"
       ]
      },
      "script": "pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_ptx"
     }
    ]
   },
   {
    "build": null,
    "name": "triton",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "c_stdlib_stub",
      "ninja",
      "cmake",
      "mlir",
      "sed"
     ],
     "host": [
      "python",
      "pybind11",
      "pip",
      "setuptools",
      "llvm",
      "llvmdev",
      "mlir",
      "zlib",
      "nlohmann_json",
      "cuda-cupti-dev"
     ],
     "run": [
      "python",
      "setuptools",
      "cuda-nvcc",
      "cuda-cuobjdump",
      "cuda-cudart",
      "cuda-cupti"
     ]
    },
    "tests": [
     {
      "python": {
       "imports": [
        "triton",
        "triton._C.libtriton"
       ]
      }
     },
     {
      "files": {
       "source": [
        "python/test/**"
       ]
      },
      "requirements": {
       "run": [
        "pip",
        "pytest",
        "scipy"
       ]
      },
      "script": "pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_ptx"
     }
    ]
   },
   {
    "build": null,
    "name": "triton",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "c_stdlib_stub",
      "ninja",
      "cmake",
      "mlir",
      "sed",
      "python",
      "cross-python_linux-64"
     ],
     "host": [
      "python",
      "pybind11",
      "pip",
      "setuptools",
      "llvm",
      "llvmdev",
      "mlir",
      "zlib",
      "nlohmann_json",
      "cuda-cupti-dev"
     ],
     "run": [
      "python",
      "setuptools",
      "cuda-nvcc",
      "cuda-cuobjdump",
      "cuda-cudart",
      "cuda-cupti"
     ]
    },
    "tests": []
   },
   {
    "build": null,
    "name": "triton",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "c_stdlib_stub",
      "ninja",
      "cmake",
      "mlir",
      "sed",
      "python",
      "cross-python_linux-64"
     ],
     "host": [
      "python",
      "pybind11",
      "pip",
      "setuptools",
      "llvm",
      "llvmdev",
      "mlir",
      "zlib",
      "nlohmann_json",
      "cuda-cupti-dev"
     ],
     "run": [
      "python",
      "setuptools",
      "cuda-nvcc",
      "cuda-cuobjdump",
      "cuda-cudart",
      "cuda-cupti"
     ]
    },
    "tests": []
   },
   {
    "build": null,
    "name": "triton",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "c_stdlib_stub",
      "ninja",
      "cmake",
      "mlir",
      "sed",
      "python",
      "cross-python_linux-64"
     ],
     "host": [
      "python",
      "pybind11",
      "pip",
      "setuptools",
      "llvm",
      "llvmdev",
      "mlir",
      "zlib",
      "nlohmann_json",
      "cuda-cupti-dev"
     ],
     "run": [
      "python",
      "setuptools",
      "cuda-nvcc",
      "cuda-cuobjdump",
      "cuda-cudart",
      "cuda-cupti"
     ]
    },
    "tests": []
   },
   {
    "build": null,
    "name": "triton",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "c_stdlib_stub",
      "ninja",
      "cmake",
      "mlir",
      "sed",
      "python",
      "cross-python_linux-64"
     ],
     "host": [
      "python",
      "pybind11",
      "pip",
      "setuptools",
      "llvm",
      "llvmdev",
      "mlir",
      "zlib",
      "nlohmann_json",
      "cuda-cupti-dev"
     ],
     "run": [
      "python",
      "setuptools",
      "cuda-nvcc",
      "cuda-cuobjdump",
      "cuda-cudart",
      "cuda-cupti"
     ]
    },
    "tests": []
   },
   {
    "build": null,
    "name": "triton",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "c_stdlib_stub",
      "ninja",
      "cmake",
      "mlir",
      "sed",
      "python",
      "cross-python_linux-64"
     ],
     "host": [
      "python",
      "pybind11",
      "pip",
      "setuptools",
      "llvm",
      "llvmdev",
      "mlir",
      "zlib",
      "nlohmann_json",
      "cuda-cupti-dev"
     ],
     "run": [
      "python",
      "setuptools",
      "cuda-nvcc",
      "cuda-cuobjdump",
      "cuda-cudart",
      "cuda-cupti"
     ]
    },
    "tests": []
   }
  ],
  "package": {
   "name": "triton",
   "version": "3.1.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_stdlib_stub",
    "ninja",
    "cmake",
    "mlir",
    "sed",
    "python",
    "cross-python_linux-64"
   ],
   "host": [
    "python",
    "pybind11",
    "pip",
    "setuptools",
    "llvm",
    "llvmdev",
    "mlir",
    "zlib",
    "nlohmann_json",
    "cuda-cupti-dev"
   ],
   "run": [
    "python",
    "setuptools",
    "cuda-nvcc",
    "cuda-cuobjdump",
    "cuda-cudart",
    "cuda-cupti"
   ]
  },
  "schema_version": 1,
  "source": {
   "patches": [
    "patches/0001-Remove-Werror-that-cause-false-positive-build-failur.patch",
    "patches/0002-BACKEND-Update-LLVM-version-to-https-github.com-llvm.patch",
    "patches/0003-BACKEND-Update-LLVM-version-to-https-github.com-llvm.patch",
    "patches/0004-BACKEND-Update-LLVM-to-llvm-llvm-project-657ec7320d8.patch",
    "patches/0005-BACKEND-Update-LLVM-version-to-https-github.com-llvm.patch",
    "patches/0006-BACKEND-Update-LLVM-version-to-https-github.com-llvm.patch",
    "patches/0007-Update-config.enableRegionSimplification-for-LLVM-19.patch",
    "patches/0008-Do-not-link-directly-to-LLVM-static-libraries.patch",
    "patches/0009-CODEGEN-Support-CUDA-12.6-4588.patch",
    "patches/0010-Use-system-PATH-to-find-tools-in-CONDA_PREFIX.patch",
    "patches/0011-Don-t-specify-A-x64-option-and-reuse-cmake-build-typ.patch",
    "patches/0012-remove-unused-requirement-filelock-4356.patch",
    "patches/0013-Add-conda-forge-include-dirs-to-list-of-include-dirs.patch"
   ],
   "sha256": "933babc32b69872efbce05fe8be61129fecf52c724fadea42d8c7b2d10e16ad9",
   "url": "https://github.com/triton-lang/triton/archive/5fe38ffd73c2ac6ed6323b554205186696631c6f.tar.gz"
  }
 },
 "name": "triton",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "triton"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/triton.json"
 },
 "raw_meta_yaml": "context:\n  version: 3.1.0\n  # Triton no longer tags releases, but there are release branches, e.g.\n  # https://github.com/triton-lang/triton/commits/release/3.1.x/\n  # Check if the commit id from Pytorch's latest pinned commit in\n  # https://github.com/pytorch/pytorch/blob/v{{ pytorch_ver }}/.ci/docker/ci_commit_pins/triton.txt\n  # can be found on one of those release branches, and use that as the version\n  git_commit: 5fe38ffd73c2ac6ed6323b554205186696631c6f\n  build_number: 5\n\npackage:\n  name: triton\n  version: ${{ version }}\n\nsource:\n  url: https://github.com/triton-lang/triton/archive/${{ git_commit }}.tar.gz\n  sha256: 933babc32b69872efbce05fe8be61129fecf52c724fadea42d8c7b2d10e16ad9\n  patches:\n    - patches/0001-Remove-Werror-that-cause-false-positive-build-failur.patch\n    # https://github.com/triton-lang/triton/commit/e4569136f3821ad3d99bef43254bf935c1c96f42\n    - patches/0002-BACKEND-Update-LLVM-version-to-https-github.com-llvm.patch\n    # https://github.com/triton-lang/triton/commit/cd4a172c79c69fff91b893c2e5deb78a7a887c26\n    - patches/0003-BACKEND-Update-LLVM-version-to-https-github.com-llvm.patch\n    # https://github.com/triton-lang/triton/commit/3e233d7ccd62bc7a29eb5266c80b379cef1f6132\n    - patches/0004-BACKEND-Update-LLVM-to-llvm-llvm-project-657ec7320d8.patch\n    # https://github.com/triton-lang/triton/commit/e8873ae7dfe68eda04d7656ec93627afe8dc56a1\n    - patches/0005-BACKEND-Update-LLVM-version-to-https-github.com-llvm.patch\n    # https://github.com/triton-lang/triton/commit/46550ab18e8f7314107cf591b9cf902b290fd45d\n    - patches/0006-BACKEND-Update-LLVM-version-to-https-github.com-llvm.patch\n    # diff between main branch:\n    # https://github.com/triton-lang/triton/commit/cf2ad02324fc253970c3ab2666e775406405f213\n    # and 3.1.x branch:\n    # https://github.com/triton-lang/triton/commit/757b6a61e7df814ba806f498f8bb3160f84b120c\n    - patches/0007-Update-config.enableRegionSimplification-for-LLVM-19.patch\n    - patches/0008-Do-not-link-directly-to-LLVM-static-libraries.patch\n    # https://github.com/triton-lang/triton/commit/f48dbc1b106c93144c198fbf3c4f30b2aab9d242\n    - patches/0009-CODEGEN-Support-CUDA-12.6-4588.patch\n    - patches/0010-Use-system-PATH-to-find-tools-in-CONDA_PREFIX.patch\n    # https://github.com/triton-lang/triton/commit/0591b3756bd4143b7163235c0eca4d718948e982\n    - patches/0011-Don-t-specify-A-x64-option-and-reuse-cmake-build-typ.patch\n    # https://github.com/triton-lang/triton/commit/3bfdbc0cba3e4838364bf6bd204fa522e1665458\n    # (use removed earlier)\n    - patches/0012-remove-unused-requirement-filelock-4356.patch\n    # https://github.com/conda-forge/pytorch-cpu-feedstock/issues/317#issuecomment-2585460619\n    - patches/0013-Add-conda-forge-include-dirs-to-list-of-include-dirs.patch\n\nbuild:\n  number: ${{ build_number }}\n  string: cuda${{ cuda_compiler_version | version_to_buildstring }}py${{ python | version_to_buildstring }}h${{ hash }}_${{ build_number }}\n  # TODO: CPU-only support still under development\n  # No success enabling Windows build as of 3.1.0:\n  # https://github.com/conda-forge/triton-feedstock/pull/29#issuecomment-2564371725\n  skip: win or cuda_compiler_version in (\"None\", \"11.8\")\n\nrequirements:\n  build:\n    - ${{ compiler('cxx') }}\n    - ${{ compiler('cuda') }}\n    - ${{ stdlib('c') }}\n    - ninja\n    - cmake\n    - mlir\n    - if: win\n      then: m2-sed\n      else: sed\n    - if: build_platform != target_platform\n      then:\n        - python\n        - cross-python_${{ target_platform }}\n  host:\n    - python\n    - pybind11\n    - pip\n    - setuptools\n    - llvm\n    - llvmdev\n    - mlir\n    - zlib\n    - nlohmann_json\n    - cuda-cupti-dev\n  run:\n    - python\n    - setuptools\n    - cuda-nvcc\n    - cuda-cuobjdump\n    - cuda-cudart\n    - cuda-cupti\n\ntests:\n  - if: build_platform == target_platform\n    then:\n      - python:\n          imports:\n            - triton\n            - triton._C.libtriton\n          pip_check: true\n      - files:\n          source:\n            - python/test/\n        requirements:\n          run:\n            - pip\n            - pytest\n            - scipy\n        script:\n          # test suite essentially depends on availability of a physical GPU,\n          # see https://github.com/triton-lang/triton/issues/466;\n          # run a test that does not require a GPU but checks\n          # if triton.compile() works\n          - pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_ptx\n\nabout:\n  license: MIT\n  license_file: LICENSE\n  summary: Development repository for the Triton language and compiler\n  description: |\n    This is the development repository of Triton, a language and compiler for writing highly efficient custom Deep-Learning primitives.\n    The aim of Triton is to provide an open-source environment to write fast code at higher productivity than CUDA, but also with higher flexibility than other existing DSLs.\n  homepage: https://github.com/triton-lang/triton\n  repository: https://github.com/triton-lang/triton\n  documentation: https://triton-lang.org/\n\nextra:\n  recipe-maintainers:\n    - erip\n    - h-vetinari\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_stdlib_stub",
   "cmake",
   "cross-python_linux-64",
   "cuda-cudart",
   "cuda-cuobjdump",
   "cuda-cupti",
   "cuda-cupti-dev",
   "cuda-nvcc",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "llvm",
   "llvmdev",
   "mlir",
   "ninja",
   "nlohmann_json",
   "pip",
   "pybind11",
   "python",
   "sed",
   "setuptools",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_stdlib_stub",
    "cmake",
    "cross-python_linux-64",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "mlir",
    "ninja",
    "python",
    "sed"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_stdlib_stub",
    "cuda-cupti-dev",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "llvm",
    "llvmdev",
    "mlir",
    "nlohmann_json",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_stdlib_stub",
    "cuda-cudart",
    "cuda-cuobjdump",
    "cuda-cupti",
    "cuda-nvcc",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest",
    "scipy"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_stdlib_stub",
    "cmake",
    "cross-python_linux-64",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "mlir",
    "ninja",
    "python",
    "sed"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-cupti-dev",
    "llvm",
    "llvmdev",
    "mlir",
    "nlohmann_json",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cuda-cudart",
    "cuda-cuobjdump",
    "cuda-cupti",
    "cuda-nvcc",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest",
    "scipy"
   ]
  }
 },
 "url": "https://github.com/triton-lang/triton/archive/5fe38ffd73c2ac6ed6323b554205186696631c6f.tar.gz",
 "version": "3.1.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/triton.json"
 }
}