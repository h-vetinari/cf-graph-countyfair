{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "azure": {
   "free_disk_space": true,
   "settings_linux": {
    "swapfile_size": "10GiB"
   }
  },
  "build_platform": {
   "linux_aarch64": "linux_64"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "triton",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "This is the development repository of Triton, a language and compiler for writing highly efficient custom Deep-Learning primitives.\nThe aim of Triton is to provide an open-source environment to write fast code at higher productivity than CUDA, but also with higher flexibility than other existing DSLs.\n",
   "dev_url": "https://github.com/triton-lang/triton",
   "doc_url": "https://triton-lang.org/",
   "home": "https://github.com/triton-lang/triton",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Development repository for the Triton language and compiler"
  },
  "build": {
   "ignore_run_exports_from": [
    "llvm"
   ],
   "number": "0",
   "string": "cuda126py39h1234567_0"
  },
  "extra": {
   "recipe-maintainers": [
    "h-vetinari"
   ]
  },
  "package": {
   "name": "triton",
   "version": "3.2.0"
  },
  "requirements": {
   "build": [
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "ninja",
    "cmake",
    "mlir",
    "sed"
   ],
   "host": [
    "python",
    "pybind11",
    "pip",
    "setuptools",
    "llvm",
    "llvmdev",
    "mlir",
    "zlib",
    "nlohmann_json",
    "cuda-cupti-dev",
    "cuda-version 12.6.*"
   ],
   "run": [
    "python",
    "setuptools",
    "cuda-nvcc-tools",
    "cuda-cuobjdump",
    "cuda-cudart",
    "cuda-cupti",
    "conda-forge/label/llvm_rc::libllvm20"
   ]
  },
  "schema_version": 0,
  "source": {
   "patches": [
    "patches/0001-Remove-Werror-that-cause-false-positive-build-failur.patch",
    "patches/0002-Do-not-link-directly-to-LLVM-static-libraries.patch",
    "patches/0003-Use-system-PATH-to-find-tools-in-CONDA_PREFIX.patch",
    "patches/0004-Don-t-specify-A-x64-option-and-reuse-cmake-build-typ.patch",
    "patches/0005-Add-conda-forge-include-dirs-to-list-of-include-dirs.patch",
    "patches/0006-release-3.2.x-Get-proper-PTX-version-for-CUDA-12.6.patch",
    "patches/0007-BACKEND-Update-LLVM-hash-5040.patch",
    "patches/0008-BACKEND-Update-llvm-to-llvm-llvm-project-fa57c7a6a5f.patch",
    "patches/0009-Update-to-llvm-llvm-project-bd9145c8c213-5180.patch",
    "patches/0010-LLVM-Update-to-llvm-project-86b69c3-5242.patch",
    "patches/0011-BACKEND-Update-LLVM-version-to-2fe947b4-5540.patch",
    "patches/0012-BACKEND-bump-llvm-to-2f7ade4b-5599.patch",
    "patches/0013-BACKEND-Update-LLVM-version-to-https-github.com-llvm.patch",
    "patches/0014-NFC-replace-TritonGPUToLLVM-Utility.h-macros-with-Tr.patch",
    "patches/0015-BACKEND-bump-to-llvm-llvm-project-c118864223c6-5684.patch",
    "patches/0016-NFC-Remove-dependency-to-cuda-headers-in-Triton-buil.patch"
   ],
   "sha256": "4ae5d426b118f657e9f3adade363832b9f4aee7f4cb8f1e17abaf837b5e32880",
   "url": "https://github.com/triton-lang/triton/archive/35c6c7c6284582b3f41c71c150e11b517acf074a.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_ptx"
   ],
   "imports": [
    "triton",
    "triton._C.libtriton"
   ],
   "requires": [
    "pip",
    "pytest",
    "scipy"
   ],
   "source_files": [
    "python/test"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_stdlib_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "mlir",
    "ninja",
    "sed"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-cupti-dev",
    "cuda-version",
    "llvm",
    "llvmdev",
    "mlir",
    "nlohmann_json",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "conda-forge/label/llvm_rc::libllvm20",
    "cuda-cudart",
    "cuda-cuobjdump",
    "cuda-cupti",
    "cuda-nvcc-tools",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest",
    "scipy"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "This is the development repository of Triton, a language and compiler for writing highly efficient custom Deep-Learning primitives.\nThe aim of Triton is to provide an open-source environment to write fast code at higher productivity than CUDA, but also with higher flexibility than other existing DSLs.\n",
   "dev_url": "https://github.com/triton-lang/triton",
   "doc_url": "https://triton-lang.org/",
   "home": "https://github.com/triton-lang/triton",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Development repository for the Triton language and compiler"
  },
  "build": {
   "ignore_run_exports_from": [
    "llvm"
   ],
   "number": "0",
   "string": "cuda126py39h1234567_0"
  },
  "extra": {
   "recipe-maintainers": [
    "h-vetinari"
   ]
  },
  "package": {
   "name": "triton",
   "version": "3.2.0"
  },
  "requirements": {
   "build": [
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "ninja",
    "cmake",
    "mlir",
    "sed"
   ],
   "host": [
    "python",
    "pybind11",
    "pip",
    "setuptools",
    "llvm",
    "llvmdev",
    "mlir",
    "zlib",
    "nlohmann_json",
    "cuda-cupti-dev",
    "cuda-version 12.6.*"
   ],
   "run": [
    "python",
    "setuptools",
    "cuda-nvcc-tools",
    "cuda-cuobjdump",
    "cuda-cudart",
    "cuda-cupti",
    "conda-forge/label/llvm_rc::libllvm20"
   ]
  },
  "schema_version": 0,
  "source": {
   "patches": [
    "patches/0001-Remove-Werror-that-cause-false-positive-build-failur.patch",
    "patches/0002-Do-not-link-directly-to-LLVM-static-libraries.patch",
    "patches/0003-Use-system-PATH-to-find-tools-in-CONDA_PREFIX.patch",
    "patches/0004-Don-t-specify-A-x64-option-and-reuse-cmake-build-typ.patch",
    "patches/0005-Add-conda-forge-include-dirs-to-list-of-include-dirs.patch",
    "patches/0006-release-3.2.x-Get-proper-PTX-version-for-CUDA-12.6.patch",
    "patches/0007-BACKEND-Update-LLVM-hash-5040.patch",
    "patches/0008-BACKEND-Update-llvm-to-llvm-llvm-project-fa57c7a6a5f.patch",
    "patches/0009-Update-to-llvm-llvm-project-bd9145c8c213-5180.patch",
    "patches/0010-LLVM-Update-to-llvm-project-86b69c3-5242.patch",
    "patches/0011-BACKEND-Update-LLVM-version-to-2fe947b4-5540.patch",
    "patches/0012-BACKEND-bump-llvm-to-2f7ade4b-5599.patch",
    "patches/0013-BACKEND-Update-LLVM-version-to-https-github.com-llvm.patch",
    "patches/0014-NFC-replace-TritonGPUToLLVM-Utility.h-macros-with-Tr.patch",
    "patches/0015-BACKEND-bump-to-llvm-llvm-project-c118864223c6-5684.patch",
    "patches/0016-NFC-Remove-dependency-to-cuda-headers-in-Triton-buil.patch"
   ],
   "sha256": "4ae5d426b118f657e9f3adade363832b9f4aee7f4cb8f1e17abaf837b5e32880",
   "url": "https://github.com/triton-lang/triton/archive/35c6c7c6284582b3f41c71c150e11b517acf074a.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_ptx"
   ],
   "imports": [
    "triton",
    "triton._C.libtriton"
   ],
   "requires": [
    "pip",
    "pytest",
    "scipy"
   ],
   "source_files": [
    "python/test"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_stdlib_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "mlir",
    "ninja",
    "sed"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-cupti-dev",
    "cuda-version",
    "llvm",
    "llvmdev",
    "mlir",
    "nlohmann_json",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "conda-forge/label/llvm_rc::libllvm20",
    "cuda-cudart",
    "cuda-cuobjdump",
    "cuda-cupti",
    "cuda-nvcc-tools",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest",
    "scipy"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "This is the development repository of Triton, a language and compiler for writing highly efficient custom Deep-Learning primitives.\nThe aim of Triton is to provide an open-source environment to write fast code at higher productivity than CUDA, but also with higher flexibility than other existing DSLs.\n",
   "dev_url": "https://github.com/triton-lang/triton",
   "doc_url": "https://triton-lang.org/",
   "home": "https://github.com/triton-lang/triton",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Development repository for the Triton language and compiler"
  },
  "build": {
   "ignore_run_exports_from": [
    "llvm"
   ],
   "number": "0",
   "string": "cuda126py39h1234567_0"
  },
  "extra": {
   "recipe-maintainers": [
    "h-vetinari"
   ]
  },
  "package": {
   "name": "triton",
   "version": "3.2.0"
  },
  "requirements": {
   "build": [
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "ninja",
    "cmake",
    "mlir",
    "sed"
   ],
   "host": [
    "python",
    "pybind11",
    "pip",
    "setuptools",
    "llvm",
    "llvmdev",
    "mlir",
    "zlib",
    "nlohmann_json",
    "cuda-cupti-dev",
    "cuda-version 12.6.*"
   ],
   "run": [
    "python",
    "setuptools",
    "cuda-nvcc-tools",
    "cuda-cuobjdump",
    "cuda-cudart",
    "cuda-cupti",
    "conda-forge/label/llvm_rc::libllvm20"
   ]
  },
  "schema_version": 0,
  "source": {
   "patches": [
    "patches/0001-Remove-Werror-that-cause-false-positive-build-failur.patch",
    "patches/0002-Do-not-link-directly-to-LLVM-static-libraries.patch",
    "patches/0003-Use-system-PATH-to-find-tools-in-CONDA_PREFIX.patch",
    "patches/0004-Don-t-specify-A-x64-option-and-reuse-cmake-build-typ.patch",
    "patches/0005-Add-conda-forge-include-dirs-to-list-of-include-dirs.patch",
    "patches/0006-release-3.2.x-Get-proper-PTX-version-for-CUDA-12.6.patch",
    "patches/0007-BACKEND-Update-LLVM-hash-5040.patch",
    "patches/0008-BACKEND-Update-llvm-to-llvm-llvm-project-fa57c7a6a5f.patch",
    "patches/0009-Update-to-llvm-llvm-project-bd9145c8c213-5180.patch",
    "patches/0010-LLVM-Update-to-llvm-project-86b69c3-5242.patch",
    "patches/0011-BACKEND-Update-LLVM-version-to-2fe947b4-5540.patch",
    "patches/0012-BACKEND-bump-llvm-to-2f7ade4b-5599.patch",
    "patches/0013-BACKEND-Update-LLVM-version-to-https-github.com-llvm.patch",
    "patches/0014-NFC-replace-TritonGPUToLLVM-Utility.h-macros-with-Tr.patch",
    "patches/0015-BACKEND-bump-to-llvm-llvm-project-c118864223c6-5684.patch",
    "patches/0016-NFC-Remove-dependency-to-cuda-headers-in-Triton-buil.patch"
   ],
   "sha256": "4ae5d426b118f657e9f3adade363832b9f4aee7f4cb8f1e17abaf837b5e32880",
   "url": "https://github.com/triton-lang/triton/archive/35c6c7c6284582b3f41c71c150e11b517acf074a.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_ptx"
   ],
   "imports": [
    "triton",
    "triton._C.libtriton"
   ],
   "requires": [
    "pip",
    "pytest",
    "scipy"
   ],
   "source_files": [
    "python/test"
   ]
  }
 },
 "name": "triton",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "triton"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/triton.json"
 },
 "raw_meta_yaml": "{% set version = \"3.2.0\" %}\n# Triton no longer tags releases, but there are release branches, e.g.\n# https://github.com/triton-lang/triton/commits/release/3.1.x/\n# Check if the commit id from Pytorch's latest pinned commit in\n# https://github.com/pytorch/pytorch/blob/v{{ pytorch_ver }}/.ci/docker/ci_commit_pins/triton.txt\n# can be found on one of those release branches, and use that as the version\n{% set git_commit = \"35c6c7c6284582b3f41c71c150e11b517acf074a\" %}\n{% set build_number = 0 %}\n\npackage:\n  name: triton\n  version: {{ version }}\n\nsource:\n  url: https://github.com/triton-lang/triton/archive/{{ git_commit }}.tar.gz\n  sha256: 4ae5d426b118f657e9f3adade363832b9f4aee7f4cb8f1e17abaf837b5e32880\n  patches:\n    - patches/0001-Remove-Werror-that-cause-false-positive-build-failur.patch\n    - patches/0002-Do-not-link-directly-to-LLVM-static-libraries.patch\n    - patches/0003-Use-system-PATH-to-find-tools-in-CONDA_PREFIX.patch\n    # https://github.com/triton-lang/triton/commit/0591b3756bd4143b7163235c0eca4d718948e982\n    - patches/0004-Don-t-specify-A-x64-option-and-reuse-cmake-build-typ.patch\n    # https://github.com/conda-forge/pytorch-cpu-feedstock/issues/317#issuecomment-2585460619\n    - patches/0005-Add-conda-forge-include-dirs-to-list-of-include-dirs.patch\n    # backport https://github.com/triton-lang/triton/pull/5765\n    - patches/0006-release-3.2.x-Get-proper-PTX-version-for-CUDA-12.6.patch\n    # backport patches for lifting llvm/mlir compatibility to(wards) v20, see\n    # https://github.com/triton-lang/triton/commits/main/cmake/llvm-hash.txt\n    - patches/0007-BACKEND-Update-LLVM-hash-5040.patch\n    - patches/0008-BACKEND-Update-llvm-to-llvm-llvm-project-fa57c7a6a5f.patch\n    - patches/0009-Update-to-llvm-llvm-project-bd9145c8c213-5180.patch\n    - patches/0010-LLVM-Update-to-llvm-project-86b69c3-5242.patch\n    - patches/0011-BACKEND-Update-LLVM-version-to-2fe947b4-5540.patch\n    - patches/0012-BACKEND-bump-llvm-to-2f7ade4b-5599.patch\n    - patches/0013-BACKEND-Update-LLVM-version-to-https-github.com-llvm.patch\n    - patches/0014-NFC-replace-TritonGPUToLLVM-Utility.h-macros-with-Tr.patch\n    - patches/0015-BACKEND-bump-to-llvm-llvm-project-c118864223c6-5684.patch\n    # backport https://github.com/triton-lang/triton/pull/5492\n    - patches/0016-NFC-Remove-dependency-to-cuda-headers-in-Triton-buil.patch\n\nbuild:\n  number: {{ build_number }}\n  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}\n  # TODO: CPU-only support still under development\n  # No success enabling Windows build as of 3.1.0:\n  # https://github.com/conda-forge/triton-feedstock/pull/29#issuecomment-2564371725\n  skip: true  # [win or cuda_compiler_version in (\"None\", \"11.8\")]\n  ignore_run_exports_from:\n    - llvm\n\nrequirements:\n  build:\n    - {{ stdlib(\"c\") }}\n    - {{ compiler(\"cxx\") }}\n    - {{ compiler(\"cuda\") }}\n    - ninja\n    - cmake\n    - mlir\n    - sed       # [unix]\n    - m2-sed    # [win]\n    - python                                # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}    # [build_platform != target_platform]\n  host:\n    - python\n    - pybind11\n    - pip\n    - setuptools\n    - llvm\n    - llvmdev\n    - mlir\n    - zlib\n    - nlohmann_json\n    - cuda-cupti-dev\n    - cuda-version {{ cuda_compiler_version }}.*\n  run:\n    - python\n    - setuptools\n    - cuda-nvcc-tools\n    - cuda-cuobjdump\n    - cuda-cudart\n    - cuda-cupti\n    # llvm v20 is not out yet, we must use the rc's; use a manual, channel-specific\n    # run-export to avoid that consumers have to add the channel themselves\n    - conda-forge/label/llvm_rc::libllvm20\n\ntest:\n  imports:\n    - triton\n    - triton._C.libtriton\n  requires:\n    - pip\n    - pytest\n    - scipy\n  source_files:\n    - python/test\n  commands:\n    - pip check\n    # test suite essentially depends on availability of a physical GPU,\n    # see https://github.com/openai/triton/issues/466;\n    # run a test that does not require a GPU but checks\n    # if triton.compile() works\n    - pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_ptx\n\nabout:\n  license: MIT\n  license_file: LICENSE\n  summary: Development repository for the Triton language and compiler\n  description: |\n    This is the development repository of Triton, a language and compiler for writing highly efficient custom Deep-Learning primitives.\n    The aim of Triton is to provide an open-source environment to write fast code at higher productivity than CUDA, but also with higher flexibility than other existing DSLs.\n  home: https://github.com/triton-lang/triton\n  dev_url: https://github.com/triton-lang/triton\n  doc_url: https://triton-lang.org/\n\nextra:\n  recipe-maintainers:\n    - h-vetinari\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_stdlib_stub",
   "cmake",
   "conda-forge/label/llvm_rc::libllvm20",
   "cuda-cudart",
   "cuda-cuobjdump",
   "cuda-cupti",
   "cuda-cupti-dev",
   "cuda-nvcc-tools",
   "cuda-version",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "llvm",
   "llvmdev",
   "mlir",
   "ninja",
   "nlohmann_json",
   "pip",
   "pybind11",
   "python",
   "sed",
   "setuptools",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_stdlib_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "mlir",
    "ninja",
    "sed"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_stdlib_stub",
    "cuda-cupti-dev",
    "cuda-version",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "llvm",
    "llvmdev",
    "mlir",
    "nlohmann_json",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_stdlib_stub",
    "conda-forge/label/llvm_rc::libllvm20",
    "cuda-cudart",
    "cuda-cuobjdump",
    "cuda-cupti",
    "cuda-nvcc-tools",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest",
    "scipy"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_stdlib_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "mlir",
    "ninja",
    "sed"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-cupti-dev",
    "cuda-version 12.6.*",
    "llvm",
    "llvmdev",
    "mlir",
    "nlohmann_json",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "conda-forge/label/llvm_rc::libllvm20",
    "cuda-cudart",
    "cuda-cuobjdump",
    "cuda-cupti",
    "cuda-nvcc-tools",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest",
    "scipy"
   ]
  }
 },
 "url": "https://github.com/triton-lang/triton/archive/35c6c7c6284582b3f41c71c150e11b517acf074a.tar.gz",
 "version": "3.2.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/triton.json"
 }
}