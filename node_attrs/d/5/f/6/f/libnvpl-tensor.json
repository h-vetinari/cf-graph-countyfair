{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_aarch64"
  },
  "conda_build": {
   "error_overlinking": true
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "os_version": {
   "linux_aarch64": "alma8"
  },
  "provider": {
   "linux_aarch64": "default"
  },
  "test": "native_and_emulated"
 },
 "feedstock_name": "libnvpl-tensor",
 "hash_type": "sha256",
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "The NVIDIA Performance Libraries (NVPL) are a collection of high performance mathematical libraries optimized for the NVIDIA Grace Armv9.0 architecture.\nThese CPU-only libraries have no dependencies on CUDA or CTK, and are drop in replacements for standard C and Fortran mathematical APIs allowing HPC applications to achieve maximum performance on the Grace platform.",
   "doc_url": "https://docs.nvidia.com/nvpl/",
   "home": "https://developer.nvidia.com/nvpl",
   "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
   "license_file": "LICENSE",
   "license_url": "https://docs.nvidia.com/nvpl/license.html",
   "summary": "The NVIDIA Performance Libraries (NVPL) are a collection of high performance mathematical libraries optimized for the NVIDIA Grace Armv9.0 architecture."
  },
  "build": {
   "number": "0",
   "script": [
    "cp -rv include $PREFIX",
    "cp -rv lib $PREFIX"
   ]
  },
  "extra": {
   "feedstock-name": "libnvpl-tensor",
   "recipe-maintainers": [
    "conda-forge/cuda"
   ]
  },
  "outputs": [
   {
    "build": {
     "run_exports": [
      "libnvpl-tensor0"
     ]
    },
    "files": [
     "include/nvpl_tensor*",
     "include/nvpl_tensor*/**",
     "lib/cmake/nvpl_tensor*/**",
     "lib/libnvpl_tensor*.so"
    ],
    "name": "libnvpl-tensor-dev",
    "requirements": {
     "host": [
      "libnvpl-tensor0",
      "_nvpl_dev_mutex",
      "libnvpl-common-dev",
      "libnvpl-blas-dev"
     ],
     "run": [
      "_nvpl_dev_mutex",
      "libnvpl-common-dev",
      "libnvpl-blas-dev",
      "libnvpl-tensor0"
     ],
     "run_constrained": [
      "arm-variant * sbsa"
     ]
    },
    "test": {
     "commands": [
      "cmake ${CMAKE_ARGS} -GNinja test",
      "cmake --build .",
      "test -f $PREFIX/include/nvpl_tensor.h",
      "test -f $PREFIX/lib/cmake/nvpl_tensor/nvpl_tensor-config.cmake",
      "test -f $PREFIX/lib/libnvpl_tensor.so"
     ],
     "files": [
      "test"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libnvpl-tensor0"
     ]
    },
    "files": [
     "lib/libnvpl_tensor*.so.*"
    ],
    "name": "libnvpl-tensor0",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "arm-variant * sbsa",
      "libgomp"
     ],
     "host": [
      "_nvpl_dev_mutex",
      "libnvpl-common-dev",
      "libnvpl-blas-dev"
     ],
     "run_constrained": [
      "arm-variant * sbsa"
     ]
    },
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libnvpl_tensor.so.0",
      "test -f $PREFIX/lib/libnvpl_tensor.so.0.2.0"
     ]
    }
   }
  ],
  "package": {
   "name": "libnvpl-tensor-split",
   "version": "0.2.0"
  },
  "schema_version": 0,
  "source": {
   "sha256": "74b0752772e6dd561d030d39739cca6ffc77b5b19abb1e9a9db9700c487d56d6",
   "url": "https://developer.download.nvidia.com/compute/nvpl/redist/nvpl_tensor/linux-sbsa/nvpl_tensor-linux-sbsa-0.2.0-archive.tar.xz"
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "arm-variant",
    "c_compiler_stub",
    "c_stdlib_stub",
    "libgomp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "_nvpl_dev_mutex",
    "libnvpl-blas-dev",
    "libnvpl-common-dev",
    "libnvpl-tensor0"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "_nvpl_dev_mutex",
    "libnvpl-blas-dev",
    "libnvpl-common-dev",
    "libnvpl-tensor0"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The NVIDIA Performance Libraries (NVPL) are a collection of high performance mathematical libraries optimized for the NVIDIA Grace Armv9.0 architecture.\nThese CPU-only libraries have no dependencies on CUDA or CTK, and are drop in replacements for standard C and Fortran mathematical APIs allowing HPC applications to achieve maximum performance on the Grace platform.",
   "doc_url": "https://docs.nvidia.com/nvpl/",
   "home": "https://developer.nvidia.com/nvpl",
   "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
   "license_file": "LICENSE",
   "license_url": "https://docs.nvidia.com/nvpl/license.html",
   "summary": "The NVIDIA Performance Libraries (NVPL) are a collection of high performance mathematical libraries optimized for the NVIDIA Grace Armv9.0 architecture."
  },
  "build": {
   "number": "0",
   "script": [
    "cp -rv include $PREFIX",
    "cp -rv lib $PREFIX"
   ]
  },
  "extra": {
   "feedstock-name": "libnvpl-tensor",
   "recipe-maintainers": [
    "conda-forge/cuda"
   ]
  },
  "outputs": [
   {
    "build": {
     "run_exports": [
      "libnvpl-tensor0"
     ]
    },
    "files": [
     "include/nvpl_tensor*",
     "include/nvpl_tensor*/**",
     "lib/cmake/nvpl_tensor*/**",
     "lib/libnvpl_tensor*.so"
    ],
    "name": "libnvpl-tensor-dev",
    "requirements": {
     "host": [
      "libnvpl-tensor0",
      "_nvpl_dev_mutex",
      "libnvpl-common-dev",
      "libnvpl-blas-dev"
     ],
     "run": [
      "_nvpl_dev_mutex",
      "libnvpl-common-dev",
      "libnvpl-blas-dev",
      "libnvpl-tensor0"
     ],
     "run_constrained": [
      "arm-variant * sbsa"
     ]
    },
    "test": {
     "commands": [
      "cmake ${CMAKE_ARGS} -GNinja test",
      "cmake --build .",
      "test -f $PREFIX/include/nvpl_tensor.h",
      "test -f $PREFIX/lib/cmake/nvpl_tensor/nvpl_tensor-config.cmake",
      "test -f $PREFIX/lib/libnvpl_tensor.so"
     ],
     "files": [
      "test"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libnvpl-tensor0"
     ]
    },
    "files": [
     "lib/libnvpl_tensor*.so.*"
    ],
    "name": "libnvpl-tensor0",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "arm-variant * sbsa",
      "libgomp"
     ],
     "host": [
      "_nvpl_dev_mutex",
      "libnvpl-common-dev",
      "libnvpl-blas-dev"
     ],
     "run_constrained": [
      "arm-variant * sbsa"
     ]
    },
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libnvpl_tensor.so.0",
      "test -f $PREFIX/lib/libnvpl_tensor.so.0.2.0"
     ]
    }
   }
  ],
  "package": {
   "name": "libnvpl-tensor-split",
   "version": "0.2.0"
  },
  "schema_version": 0,
  "source": {
   "sha256": "74b0752772e6dd561d030d39739cca6ffc77b5b19abb1e9a9db9700c487d56d6",
   "url": "https://developer.download.nvidia.com/compute/nvpl/redist/nvpl_tensor/linux-sbsa/nvpl_tensor-linux-sbsa-0.2.0-archive.tar.xz"
  }
 },
 "name": "libnvpl-tensor-split",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libnvpl-tensor-dev",
   "libnvpl-tensor0"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_aarch64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/libnvpl-tensor.json"
 },
 "raw_meta_yaml": "{% set version = \"0.2.0\" %}\n{% set soversion = \".\".join(version.split(\".\")[:3]) %}\n{% set somajor = version.split(\".\")[0] %}\n{% set arm_variant_type = arm_variant_type|default(\"sbsa\") %}\n\npackage:\n  name: libnvpl-tensor-split\n  version: {{ version }}\n\nsource:\n  url: https://developer.download.nvidia.com/compute/nvpl/redist/nvpl_tensor/linux-sbsa/nvpl_tensor-linux-sbsa-{{ version }}-archive.tar.xz\n  sha256: 74b0752772e6dd561d030d39739cca6ffc77b5b19abb1e9a9db9700c487d56d6\n\nbuild:\n  number: 0\n  # nvpl is only for ARM architecture\n  skip: true  # [not aarch64]\n  script:\n    - cp -rv include $PREFIX\n    - cp -rv lib $PREFIX\n\noutputs:\n\n  - name: libnvpl-tensor-dev\n    build:\n      run_exports:\n        - {{ pin_subpackage(\"libnvpl-tensor\" ~ somajor ) }}\n    files:\n      - include/nvpl_tensor*\n      - include/nvpl_tensor*/**\n      - lib/cmake/nvpl_tensor*/**\n      - lib/libnvpl_tensor*.so\n    requirements:\n      host:\n        - {{ pin_subpackage(\"libnvpl-tensor\" ~ somajor, exact=True) }}\n        - _nvpl_dev_mutex\n        - libnvpl-common-dev\n        - libnvpl-blas-dev\n      run:\n        - _nvpl_dev_mutex\n        - {{ pin_compatible(\"libnvpl-common-dev\", exact=True) }}\n        - {{ pin_compatible(\"libnvpl-blas-dev\", exact=True) }}\n        - {{ pin_subpackage(\"libnvpl-tensor\" ~ somajor, exact=True) }}\n      run_constrained:\n        - arm-variant * {{ arm_variant_type }}\n    test:\n      files:\n        - test\n      requires:    # [build_platform == target_platform]\n        - {{ compiler(\"c\") }}  # [build_platform == target_platform]\n        - {{ compiler(\"cxx\") }}  # [build_platform == target_platform]\n        - {{ stdlib(\"c\") }}  # [build_platform == target_platform]\n        - cmake   # [build_platform == target_platform]\n        - ninja  # [build_platform == target_platform]\n      commands:\n        - cmake ${CMAKE_ARGS} -GNinja test  # [build_platform == target_platform]\n        - cmake --build .  # [build_platform == target_platform]\n        - test -f $PREFIX/include/nvpl_tensor.h\n        - test -f $PREFIX/lib/cmake/nvpl_tensor/nvpl_tensor-config.cmake\n        - test -f $PREFIX/lib/libnvpl_tensor.so\n\n  - name: libnvpl-tensor{{ somajor }}\n    build:\n      run_exports:\n        - {{ pin_subpackage(\"libnvpl-tensor\" ~ somajor ) }}\n    files:\n      - lib/libnvpl_tensor*.so.*\n    requirements:\n      build:\n        - {{ compiler(\"c\") }}\n        - {{ stdlib(\"c\") }}\n        - arm-variant * {{ arm_variant_type }}\n        - libgomp\n      host:\n        - _nvpl_dev_mutex\n        - libnvpl-common-dev\n        - libnvpl-blas-dev\n      run_constrained:\n        - arm-variant * {{ arm_variant_type }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libnvpl_tensor.so.{{ somajor }}\n        - test -f $PREFIX/lib/libnvpl_tensor.so.{{ soversion }}\n\nabout:\n  home: https://developer.nvidia.com/nvpl\n  license: LicenseRef-NVIDIA-End-User-License-Agreement\n  license_file: LICENSE\n  license_url: https://docs.nvidia.com/nvpl/license.html\n  summary: >-\n    The NVIDIA Performance Libraries (NVPL) are a collection of high\n    performance mathematical libraries optimized for the NVIDIA Grace Armv9.0\n    architecture.\n  description: >-\n    The NVIDIA Performance Libraries (NVPL) are a collection of high\n    performance mathematical libraries optimized for the NVIDIA Grace Armv9.0\n    architecture.\n\n    These CPU-only libraries have no dependencies on CUDA or CTK, and are drop\n    in replacements for standard C and Fortran mathematical APIs allowing HPC\n    applications to achieve maximum performance on the Grace platform.\n  doc_url: https://docs.nvidia.com/nvpl/\n\nextra:\n  feedstock-name: libnvpl-tensor\n  recipe-maintainers:\n    - conda-forge/cuda\n",
 "req": {
  "__set__": true,
  "elements": [
   "_nvpl_dev_mutex",
   "arm-variant",
   "c_compiler_stub",
   "c_stdlib_stub",
   "libgomp",
   "libnvpl-blas-dev",
   "libnvpl-common-dev",
   "libnvpl-tensor0"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "arm-variant",
    "c_compiler_stub",
    "c_stdlib_stub",
    "libgomp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "_nvpl_dev_mutex",
    "c_compiler_stub",
    "c_stdlib_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "libnvpl-blas-dev",
    "libnvpl-common-dev",
    "libnvpl-tensor0"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "_nvpl_dev_mutex",
    "c_compiler_stub",
    "c_stdlib_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "libnvpl-blas-dev",
    "libnvpl-common-dev",
    "libnvpl-tensor0"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "arm-variant * sbsa",
    "c_compiler_stub",
    "c_stdlib_stub",
    "libgomp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "_nvpl_dev_mutex",
    "libnvpl-blas-dev",
    "libnvpl-common-dev",
    "libnvpl-tensor0"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "_nvpl_dev_mutex",
    "libnvpl-blas-dev",
    "libnvpl-common-dev",
    "libnvpl-tensor0"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  }
 },
 "url": "https://developer.download.nvidia.com/compute/nvpl/redist/nvpl_tensor/linux-sbsa/nvpl_tensor-linux-sbsa-0.2.0-archive.tar.xz",
 "version": "0.2.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/libnvpl-tensor.json"
 }
}